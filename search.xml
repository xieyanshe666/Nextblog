<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>c++ map用法总结</title>
    <url>/posts/297322009/</url>
    <content><![CDATA[<h3 id="1，map简介"><a href="#1，map简介" class="headerlink" title="1，map简介"></a>1，map简介</h3><p>map是STL的一个关联容器，它提供一对一的hash。</p>
<span id="more"></span>

<p>第一个可以称为关键字(key)，每个关键字只能在map中出现一次；<br>第二个可能称为该关键字的值(value)；</p>
<p>map以模板(泛型)方式实现，可以存储任意类型的数据，包括使用者自定义的数据类型。Map主要用于资料一对一映射(one-to-one)的情況，map內部的实现自建一颗红黑树，这颗树具有对数据自动排序的功能。在map内部所有的数据都是有序的，后边我们会见识到有序的好处。比如一个班级中，每个学生的学号跟他的姓名就存在著一对一映射的关系。</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/ab94f358cc379299731b9aaa4814fd47.png"></p>
<h3 id="2，map的功能"><a href="#2，map的功能" class="headerlink" title="2，map的功能"></a>2，map的功能</h3><p>自动建立key － value的对应。key 和 value可以是任意你需要的类型，包括自定义类型。</p>
<h3 id="3，使用map"><a href="#3，使用map" class="headerlink" title="3，使用map"></a>3，使用map</h3><p>使用map得包含map类所在的头文件</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span>  <span class="comment">//注意，STL头文件没有扩展名.h</span></span></span><br></pre></td></tr></table></figure>


<p>map对象是模板类，需要关键字和存储对象两个模板参数：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std:map&lt;<span class="type">int</span>, string&gt; personnel;</span><br></pre></td></tr></table></figure>


<p>这样就定义了一个用int作为索引,并拥有相关联的指向string的指针.</p>
<p>为了使用方便，可以对模板类进行一下类型定义，</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> map&lt;<span class="type">int</span>,CString&gt; UDT_MAP_INT_CSTRING;</span><br><span class="line"></span><br><span class="line">UDT_MAP_INT_CSTRING enumMap;</span><br></pre></td></tr></table></figure>


<h3 id="4，map的构造函数"><a href="#4，map的构造函数" class="headerlink" title="4，map的构造函数"></a>4，map的构造函数</h3><p>map共提供了6个构造函数，这块涉及到内存分配器这些东西，略过不表，在下面我们将接触到一些map的构造方法，这里要说下的就是，我们通常用如下方法构造一个map：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">map&lt;<span class="type">int</span>, string&gt; mapStudent;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5，插入元素"><a href="#5，插入元素" class="headerlink" title="5，插入元素"></a>5，插入元素</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个map对象</span></span><br><span class="line">map&lt;<span class="type">int</span>, string&gt; mapStudent;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 第一种 用insert函數插入pair</span></span><br><span class="line">mapStudent.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;<span class="type">int</span>, string&gt;(<span class="number">000</span>, <span class="string">&quot;student_zero&quot;</span>));</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 第二种 用insert函数插入value_type数据</span></span><br><span class="line">mapStudent.<span class="built_in">insert</span>(map&lt;<span class="type">int</span>, string&gt;::<span class="built_in">value_type</span>(<span class="number">001</span>, <span class="string">&quot;student_one&quot;</span>));</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 第三种 用&quot;array&quot;方式插入</span></span><br><span class="line">mapStudent[<span class="number">123</span>] = <span class="string">&quot;student_first&quot;</span>;</span><br><span class="line">mapStudent[<span class="number">456</span>] = <span class="string">&quot;student_second&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>以上三种用法，虽然都可以实现数据的插入，但是它们是有区别的，当然了第一种和第二种在效果上是完成一样的，用insert函数插入数据，在数据的 插入上涉及到集合的唯一性这个概念，即当map中有这个关键字时，insert操作是不能在插入数据的，但是用数组方式就不同了，它可以覆盖以前该关键字对 应的值，用程序说明如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">mapStudent.<span class="built_in">insert</span>(map&lt;<span class="type">int</span>, string&gt;::<span class="built_in">value_type</span> (<span class="number">001</span>, <span class="string">&quot;student_one&quot;</span>));</span><br><span class="line"> </span><br><span class="line">mapStudent.<span class="built_in">insert</span>(map&lt;<span class="type">int</span>, string&gt;::<span class="built_in">value_type</span> (<span class="number">001</span>, <span class="string">&quot;student_two&quot;</span>));</span><br></pre></td></tr></table></figure>

<p>上面这两条语句执行后，map中001这个关键字对应的值是“student_one”，第二条语句并没有生效，那么这就涉及到我们怎么知道insert语句是否插入成功的问题了，可以用pair来获得是否插入成功，程序如下</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 构造定义，返回一个pair对象</span></span><br><span class="line"><span class="function">pair&lt;iterator,<span class="type">bool</span>&gt; <span class="title">insert</span> <span class="params">(<span class="type">const</span> value_type&amp; val)</span></span>;</span><br><span class="line"> </span><br><span class="line">pair&lt;map&lt;<span class="type">int</span>, string&gt;::iterator, <span class="type">bool</span>&gt; Insert_Pair;</span><br><span class="line"> </span><br><span class="line">Insert_Pair = mapStudent.<span class="built_in">insert</span>(map&lt;<span class="type">int</span>, string&gt;::<span class="built_in">value_type</span> (<span class="number">001</span>, <span class="string">&quot;student_one&quot;</span>));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(!Insert_Pair.second)</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;&quot;</span>Error insert <span class="keyword">new</span> element<span class="string">&quot; &lt;&lt; endl;</span></span><br></pre></td></tr></table></figure>

<p>我们通过pair的第二个变量来知道是否插入成功，它的第一个变量返回的是一个map的迭代器，如果插入成功的话Insert_Pair.second应该是true的，否则为false。</p>
<h3 id="6，-查找元素"><a href="#6，-查找元素" class="headerlink" title="6， 查找元素"></a>6， 查找元素</h3><p>当所查找的关键key出现时，它返回数据所在对象的位置，如果沒有，返回iter与end函数的值相同。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// find 返回迭代器指向当前查找元素的位置否则返回map::end()位置</span></span><br><span class="line">iter = mapStudent.<span class="built_in">find</span>(<span class="string">&quot;123&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(iter != mapStudent.<span class="built_in">end</span>())</span><br><span class="line">       cout&lt;&lt;<span class="string">&quot;Find, the value is&quot;</span>&lt;&lt;iter-&gt;second&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   cout&lt;&lt;<span class="string">&quot;Do not Find&quot;</span>&lt;&lt;endl;</span><br></pre></td></tr></table></figure>

<h3 id="7，-刪除与清空元素"><a href="#7，-刪除与清空元素" class="headerlink" title="7， 刪除与清空元素"></a>7， 刪除与清空元素</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//迭代器刪除</span></span><br><span class="line">iter = mapStudent.<span class="built_in">find</span>(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">mapStudent.<span class="built_in">erase</span>(iter);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//用关键字刪除</span></span><br><span class="line"><span class="type">int</span> n = mapStudent.<span class="built_in">erase</span>(<span class="string">&quot;123&quot;</span>); <span class="comment">//如果刪除了會返回1，否則返回0</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//用迭代器范围刪除 : 把整个map清空</span></span><br><span class="line">mapStudent.<span class="built_in">erase</span>(mapStudent.<span class="built_in">begin</span>(), mapStudent.<span class="built_in">end</span>());</span><br><span class="line"><span class="comment">//等同于mapStudent.clear()</span></span><br></pre></td></tr></table></figure>

<h3 id="8，map的大小"><a href="#8，map的大小" class="headerlink" title="8，map的大小"></a>8，map的大小</h3><p>在往map里面插入了数据，我们怎么知道当前已经插入了多少数据呢，可以用size函数，用法如下：</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> nSize = mapStudent.<span class="built_in">size</span>();</span><br></pre></td></tr></table></figure>

<h3 id="9，map的基本操作函数："><a href="#9，map的基本操作函数：" class="headerlink" title="9，map的基本操作函数："></a>9，map的基本操作函数：</h3><pre><code> C++ maps是一种关联式容器，包含“关键字/值”对

 begin()         返回指向map头部的迭代器

 clear(）        删除所有元素

 count()         返回指定元素出现的次数, (帮助评论区理解： 因为key值不会重复，所以只能是1 or 0)

 empty()         如果map为空则返回true

 end()           返回指向map末尾的迭代器

 equal_range()   返回特殊条目的迭代器对

 erase()         删除一个元素

 find()          查找一个元素

 get_allocator() 返回map的配置器

 insert()        插入元素

 key_comp()      返回比较元素key的函数

 lower_bound()   返回键值&gt;=给定元素的第一个位置

 max_size()      返回可以容纳的最大元素个数

 rbegin()        返回一个指向map尾部的逆向迭代器

 rend()          返回一个指向map头部的逆向迭代器

 size()          返回map中元素的个数

 swap()           交换两个map

 upper_bound()    返回键值&gt;给定元素的第一个位置

 value_comp()     返回比较元素value的函数
</code></pre>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title>《红岩》梗概</title>
    <url>/posts/746134704/</url>
    <content><![CDATA[<p>1948年，在国民党统治下的重庆处在黎明前最黑暗的时候为了配合工人运动，重庆地下党工运书记许云峰命甫志高建立沙坪书店，作为地下党的备用联络站。甫志高为了表现自己，不顾联络站的保密性质擅自扩大书店规模，销售进步书刊。</p>
<span id="more"></span>
<p>一天，区委书记江姐要去华山根据地，当她到离根据地不远的一座县城时，发现自己的丈夫一华山纵队政委彭松涛的人头被高挂城头。见到纵队司令员“双枪老太婆”后，她忍住悲痛，坚决要求到丈夫生前战斗的地方工作。</p>
<p>甫志高又自作主张吸收了一名叫郑克昌的青年入店工作，许云峰几经分析，发现郑克昌形迹可疑，便让甫志高通知所有人员迅速转移。甫志高不听劝告，结果成了可耻的叛徒。由于他的告密，许云峰，成岗等人相继被捕。特务头子徐鹏飞得意忘形，然而，他用尽各种伎俩，都没从许云峰等人身上得到任何有用的东西。</p>
<p>叛徒甫志高带领特务窜到乡下，江姐不幸被捕。在狱中她受尽了折磨，面对毒刑， 她丝毫不屈服。秋去冬来，转眼到了年底，全国革命形势一片大好。阴历年三十，渣滓洞全体难友举行了一个别开生面的联欢会。更令人高兴的是，地下党派人与他们取得了联系。</p>
<p>解放军日益逼近重庆，地下党准备组织狱中暴动。当解放军攻上四川，即将解放重庆时，徐鹏飞等提前杀害了许云峰、江姐、成岗等人。就在许云峰等人被害的当晚，渣滓洞和白公馆同时举行了暴动。一些同志牺牲了，但更多的同志终于冲出了魔窟，伴随着解放军的炮声，去迎接黎明时分灿烂的曙光。</p>
]]></content>
      <tags>
        <tag>言射学习</tag>
      </tags>
  </entry>
  <entry>
    <title>学校游记1</title>
    <url>/posts/2669557626/</url>
    <content><![CDATA[<p>我叫谢言射（笔名）<br>2021.12.2<br>开始第六单元语文考试！！！<br>第一面<br>这选择题有点意思啊！<br>第二面<br>额<br>第三面<br>额……<br>第四面<br>作文是倡议书！！！ 300字QWQ<br>附加题：<br>相煎何太急怎么写来着？？？ 哦……<br>啊啊啊<br>洛阳亲友如相问的“洛”是洛谷的“洛”还是落叶的“落”啊……<br>怎么办怎么办？？？<br>颓废了……<br>我终究还是太弱了……<br>中午<br>参加了科技节活动<br>（回来被冤枉，罚站了一节课）<br>┭┮﹏┭┮<br>下午<br>上社团课</p>
<span id="more"></span>

<p>2021.12.3<br>rp &#x3D; 0<br>下午又双叒叕数学突击考试<br>25min就答完了，（这不像小六数学啊）<br>老师曰：收试卷<br>我交了上去（给组长）<br>组长要拿时<br>老师一把夺了过去<br>改了起来……<br>然而<br>我谢言射是那么好欺负的吗？？<br>我一把夺了回来<br>炸出了第一个100！！！<br>rp +&#x3D; 100<br>正高兴这呢<br>脑海里突然蹦进一个想法<br>万一他改错了呢？<br>啊啊啊！！！<br>但愿他没改错啊！！！<br>rp -&#x3D; 100<br>真好…<br>2021.12.6<br>早上发试卷了<br>还好，老师没改错<br>语文也还行<br>下午又双叒叕数学突击考试<br>貌似考试时间还不够<br>光是恩格尔是哪个国家的这一题就卡死我了<br>后来不知是哪两个人在吵架<br>好烦，气氛也感觉不对<br>考完试，和同学对了一下答案<br>我突然觉得<br>我退役了……<br>前面一部分没发现错误<br>却在附加题……<br>写错了一个“答”……<br>听说，写错一个“答”，要扣掉整一题的分数……<br>晚上<br>今天爸爸不知怎么回事，喝起了葡萄酒<br>墨红的葡萄酒从酒瓶里倒出<br>我觉得，那是鲜血<br>是谁的血呢<br>我觉得<br>一定是他的<br>大脑中<br>一片空白……<br>2021.12.7<br>数学课上<br>老师不讲课，看着我们<br>看着我们<br>顿时，我感受到了<br>一个老师，内心的绝望<br>自“双减”政策以来<br>班级里什么都减<br>特别是平均分<br>我突然想到了，昨天考的试卷<br>过了许久，老师终于说话了<br>“自己看书，看懂了，做作业。”<br>十个字<br>简洁明了<br>我的内心<br>汹涌澎拜</p>
<p>另一个数学课代表（闻昊）<br>去翻试卷了<br>我才知道<br>老师是那么信任我<br>用我的当范本<br>结果<br>托于一付<br>99+5<br>昨天预料到的分数</p>
<p>试卷发下来了<br>99+5<br>尽管已经有了心理准备<br>但还是有点接受不了<br>三十功名尘与土，八千里路云和月<br>亏了老师，还把我的当范例改<br>另一个女同学（杭兮雯）<br>100+10<br>另一个数学课代表（闻昊）<br>98+10<br>窗外阳光射进来<br>很刺眼<br>终究<br>我还是失败了……<br>退役……<br>2021.12.8<br>由于疫情原因，上不了学，宅家<br>PS：想看日记的麻烦点链接： <a href="https://yanshe-blog.mystrikingly.com/blog/1">https://yanshe-blog.mystrikingly.com/blog/1</a><br>2022.1.10<br>很好，总算回到了学校<br>去前看了下摩羯座的运势<br>说我今天太固执<br>固执？？<br>哈哈，怎么可能呢<br>便不在意地去了学校<br>没想到<br>玄学，将会成为事实</p>
<p>说实话，我一开始真的没在意<br>但一上午过去的时候<br>我渐渐发现<br>不 对 劲<br>好像还真的一直在和人家杠欸<br>做数学作业的时候<br>可能因为这一个月都在颓废<br>实力大减！！！！<br>脑子短路了<br>连条形统计图都不会看了！！！<br>这没事<br>主要还和别人的正确答案杠了一下午<br>这……<br>最后还是老师来讲<br>才统一了答案<br>突然又想起早上的运势<br>说好的科学呢？！</p>
<p>回来想了想<br>干脆隐居吧<br>不要太相信自己的答案了<br>AFO……<br>PS：语文老师还说这学期不用期末考了，不知道是不是真的<br>2022.1.11<br>今天怎么说呢<br>emmm……<br>也没什么好说的<br>就感觉<br>我不是一个人了<br>而是两个人<br>很奇怪啊<br>明明上课上得正好<br>却想睡觉了？？？<br><del>还好老师及时让我回答问题</del><br>然后回到家<br>感觉才刚刚起床？？<br>这……<br><del>我自己都觉得自己得神经病了</del><br>还有<br>为什么写完作业<br>突然觉得自己的字很丑？？<br>算了，先睡觉吧<br>万一睡一觉就好了呢<br>2022.1.12<br>算了<br>就这样吧<br>反正我是越来越搞不清现实和梦境了<br>emmmm……<br>隔壁班今天数学期末模拟考了<br>额……<br>我估计我们班也快了<br>啊啊啊啊<br>今天数学老师出了一道难题<br>我 会 啊<br>就不叫我<br>亏我还不断发眼神给他<br>然后又出了一道<br>我 又 会 啊<br>还发眼神给他<br>《就 不 叫 我》<br>算了<br>我想明白了<br>如果这次模拟考<br>我考到了满分还好<br>考不到的话<br><strong>直接退役吧</strong><br>AFO……<br>2022.1.13<br>又是看似平平无奇的一天<br>“滴滴滴”闹钟响了<br>谢言射顺手关掉闹钟，翻了个身，从床上起来<br>“复学第四天”他心里这样想着<br>像往常一样，去洗手间洗漱了一番又吃过早饭后，就往学校奔<br>不同的是，今天天阴沉沉的，谢言射也没好心情<br>不知怎么的，反正就是没好心情<br>到了学校<br>王有缘一直问谢言射这个那个的，谢言射一一作答<br>帮数学老师收完作业后，就一直看书<br>“数学课又是自己做题”他想<br>还好，还算简单<br>又迷迷糊糊地过了一个中午和下午<br>晚托班时，这次语文老师突击考试<br>“真是的，昨天只顾着复习数学了”谢言射埋怨到<br>谢言射觉得，整体还不错<br>就是选择题中有题分辨读音的疑似错误<br>“课外阅读又是关于贝多芬的，真谢谢了他。”<br>“附加题居然是古诗，前段时间还考小古文。”<br>“看来看去，就那道选择题不确定，关键还值两分。”<br>试卷收上去了<br>“也就不管他了吧。”<br>回到家中<br>突然就觉得“路漫漫其修远兮，吾将上下而求索”这句古诗好有道理啊<br>晚安……<br>2022.1.14<br>哈哈哈哈哈哈哈哈……<br>猜猜今天是什么日子<br>嘿嘿，不知道吧<br>谢言射的生日！！！<br>让我们快点祝他<del>快生</del>生快，生日快乐！<br>咳咳咳<br>好了，玩笑开到这里为止<br>PS：去微信朋友圈看看，谢言射发了<br>自导自演：<a href="https://www.luogu.com.cn/discuss/397786?page=1">https://www.luogu.com.cn/discuss/397786?page=1</a><br>今天嘛<br>其他还好，就是有人在课堂上说今天是我的生日，把我社死了<br>还有<br>数学只考了98.5+10<br>AFO……<br>心情不好，英语老师还以为我生病了<br>emmm……<br>生日嘛<br>咕咕咕</p>
]]></content>
      <tags>
        <tag>游记</tag>
        <tag>学校</tag>
      </tags>
  </entry>
  <entry>
    <title>学校游记3</title>
    <url>/posts/3479680266/</url>
    <content><![CDATA[<h2 id="2022-3-7"><a href="#2022-3-7" class="headerlink" title="2022.3.7"></a>2022.3.7</h2><p>最近网站出现了一些问题，我们正在修复，带来不便麻烦谅解。</p>
<span id="more"></span>

<h2 id="2022-3-10"><a href="#2022-3-10" class="headerlink" title="2022.3.10"></a>2022.3.10</h2><p>好好好，简要说明一下最近遇到的一些问题<br>那个不就是我搞了个微信公众号嘛<br>如何月入让我找一些学习资料<br>我照办了<br>然后就侵权了<br>导致之前的文章全部被删掉<br>而且每次发文章都要冒着风险<br>所以……<br>辜负大家了……<br>抱歉……<br>另外……<br>他们可能查到这个网站上<br>所以我将进行一系列的调整<br>对不起大家……</p>
<h2 id="2022-3-21"><a href="#2022-3-21" class="headerlink" title="2022.3.21"></a>2022.3.21</h2><p>从明天起，日记将开始恢复正常。</p>
<h2 id="2022-3-22"><a href="#2022-3-22" class="headerlink" title="2022.3.22"></a>2022.3.22</h2><p>很好<br>汇报一下战绩<br><del>（不忍直视，直接删除）</del><br>算了，说一下作文的事吧 <del>（再皮一下）</del><br>我写了，但不肯发出来，(<em>^▽^</em>)<br>所以给大家安利一个<br>《作文生成器》<br>链接：<a href="https://suulnnka.github.io/BullshitGenerator/index.html">https://suulnnka.github.io/BullshitGenerator/index.html</a><br>嘿嘿，秒生！！！<br>比如说……<br><a href="https://suulnnka.github.io/BullshitGenerator/index.html?%E4%B8%BB%E9%A2%98=%E8%B0%A2%E8%A8%80%E5%B0%84%E6%98%AF%E7%8C%AA&%E9%9A%8F%E6%9C%BA%E7%A7%8D%E5%AD%90=2453136790">这个</a></p>
<p>嘿嘿，试试<br><del>试试将这样的作文交给老师</del></p>
<h2 id="2022-3-23"><a href="#2022-3-23" class="headerlink" title="2022.3.23"></a>2022.3.23</h2><p>要考试了，赶紧复习！！！！</p>
<h2 id="2022-3-28"><a href="#2022-3-28" class="headerlink" title="2022.3.28"></a>2022.3.28</h2><p>很好，今天又开始写日记了<br>今天嘛……<br>我们有一位同学没有来<br>但……<br>算了，不要去推理人家了<br>本来想把界面调灰色的<br>但懒，不想调，所以……<br>还是发张图纪念吧……</p>
<p><img src="https://pic1.zhimg.com/80/v2-b8fa0f4e9fde5b5e5e1600a8ee5b755a_1440w.jpg"></p>
<p>逝者平安，一路走好……</p>
<h2 id="2022-3-29"><a href="#2022-3-29" class="headerlink" title="2022.3.29"></a>2022.3.29</h2><p>我在做一件大事，先咕咕咕一期</p>
<h2 id="2022-4-1"><a href="#2022-4-1" class="headerlink" title="2022.4.1"></a>2022.4.1</h2><p>愚人节快乐~<br>慢慢听吧</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=3&id=2500631011&auto=1&height=66"></iframe>

<p>我还有事，先走了</p>
<h2 id="2022-4-8"><a href="#2022-4-8" class="headerlink" title="2022.4.8"></a>2022.4.8</h2><p>啊~<br>咕咕咕了那么多期，总算复学了<br>明天数学第四单元正宗试卷要测试，请及时复习！！！<br>明天数学第四单元正宗试卷要测试，请及时复习！！！<br>明天数学第四单元正宗试卷要测试，请及时复习！！！<br>再来回顾一下今天的试卷（第一单元的正宗试卷）<br>第一题，就是<br><strong>正数和负数是什么的量？</strong><br>我写了“相对”<br>但教科书上是“相反”<br>啊啊啊啊啊啊啊啊<br>要知道，我一开始写了“相反”<br>然后改成了“相对”<br>又写了“相反”<br>最后还是写了“相对”……<br>:disappointed_relieved:<br>嘿嘿，还好<br>我去问了一下我们<del>亲爱的</del>网友<br>他们说：</p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/fanandduei.png"></p>
<p>给了我<del>受伤的小心灵</del>一点安慰<br>:cold_sweat:</p>
<h2 id="2022-4-12"><a href="#2022-4-12" class="headerlink" title="2022.4.12"></a>2022.4.12</h2><p>啊啊啊啊，怎么又考试啊啊啊！！！！<br><del>天生我材必有用，奈何分数不够用</del><br>啊啊啊啊，那个zyh真的是<br>都没检查好就给我拿走了<br>鹅妈妈……<br>ε&#x3D;(´ο｀*)))唉<br><img src="https://api.solstice23.top/countdown/?date=1649822400&type=1&formatType=7&fontSize=30&color=5e72e4&left=%E8%BF%98%E6%9C%89%20&right=%20%E6%88%91%E5%B0%B1%E8%A6%81%E5%87%89%E5%87%89%E4%BA%86%E2%80%A6%E2%80%A6"></p>
]]></content>
      <tags>
        <tag>游记</tag>
        <tag>学校</tag>
      </tags>
  </entry>
  <entry>
    <title>学校游记2</title>
    <url>/posts/1793860868/</url>
    <content><![CDATA[<h2 id="2022-1-15"><a href="#2022-1-15" class="headerlink" title="2022.1.15"></a>2022.1.15</h2><p>我12岁的第二天</p>
<span id="more"></span>

<p>emmmm……<br>先宣布一个大事<br>我 真 正 退 役 了<br>（这段写给我的同学）<br>以后，我发现老师的答案（同学做的范例等），如有错误，我不会再提出来了！<br>我受够了杠精的生活<del>（尽管我前世可能是杠精）</del><br>不 想 再 干 了<br>真的是，有时候不小心和正确答案杠上了<br><del>还把正确答案当错误答案，和它杠一天</del></p>
<p>好<br>让我们来回忆三岁时的谢言射<br>(图片好像炸了)<br><del>依旧那么帅</del></p>
<p>咳咳咳<br>今天……<br>很好，退役工作做得不错<br>没和人家杠<br>直接改了自己的错误答案<br><del>因为正确答案也是我想出来的</del></p>
<h2 id="2022-1-17"><a href="#2022-1-17" class="headerlink" title="2022.1.17"></a>2022.1.17</h2><p>笑死我了<br>哈哈哈哈哈哈哈……<br>emmm……<br>突然感觉语文老师的改卷标准我不适应<br>意思相近的也给我错<br>还好挡住了，但只有94+5<br>呜呜呜……<br>额<br>突然想骂老师一顿<br>但找不到合适的词<br>额……</p>
<p>最近数学老师是越来越怪了<br>和语文老师换了课<br>却不考试？？？<br>让我们写作业？？？<br>前几天偶然看到他在自己出试卷<br>莫非……<br>（电脑）正在关机……</p>
<h2 id="2022-1-18"><a href="#2022-1-18" class="headerlink" title="2022.1.18"></a>2022.1.18</h2><p>可怜的谢言射<br>被几个老师轮流轰炸<br>ps：语文和英语我不说了，可以私信问我（我同学都知道）<br>就讲数学老师<br>今天，我终于知道了<br>今天改作业时，他好像认错人了<br>边改边说<br>“是抄的吧。”<br>ps：不知道有没有听错<br>然后我“啊？”了一声<br>他就不说话了<br>我抄的？？？？？？？？？？？？？？？？？？？？<br>别人抄我的还差不多！！！！！？<br>呵<br>笑死我了<br>终于知道了<br>这个不可告人的秘密……</p>
<h2 id="2022-1-20"><a href="#2022-1-20" class="headerlink" title="2022.1.20"></a>2022.1.20</h2><p>昨天因为家里网络问题，无法更新<br>咳咳咳<br>来说今天<br>昨天考试了，然后又搞的我面红耳赤<br>然后今天发试卷了嘛<br>额……<br>算上附加费的话嘛<br>全班第一<br>不加嘛……<br>第二………………………………<br>笑死我了，我这是第几次没得满分了？？？<br>对此，我和另一个数学课代表去办公室辞去了数学课代表这个职位<br>以后由@zyh来代替我的工作<br>聊天记录如下：<br>我：额，老师，我不想当数学课代表了<br>师：额，为什么啊<br>我：就是……就是成绩太差了<br>师：成绩这个没关系的，课代表嘛，就是帮老师干一些活的<br>我：不是……我就是……感觉我不配当数学课代表<br>师：额，是不是太忙了<br>我：嗯，感觉有点<br>师：好吧，你回去吧，我自己再找一个人</p>
<h2 id="2022-2-14"><a href="#2022-2-14" class="headerlink" title="2022.2.14"></a>2022.2.14</h2><p>啊啊啊，经历了一个寒假，总算回到学校了<br>和以前一样啊，明明想对别人说的话有很多，见到了感觉就没了？？？<br>咳咳咳<br>其他我不多说，就说有人污蔑我喝水水都滴下来的事<br>就说一下哈<br>就是TA说TA家电视看某些电视要充钱，然后我哈哈哈笑了，毕竟我家的电视不用充钱，然后我就在心里得意，结果乐极生悲，拿水杯的手一歪，洒了几滴出来，尽管只有几滴，但还是被TA看见了，就在那乱污蔑我！！！！<br>笑死！<br>后来弄明白了，TA家是可选电视看的电视，我家的频道是不用钱的</p>
<h2 id="2022-2-15"><a href="#2022-2-15" class="headerlink" title="2022.2.15"></a>2022.2.15</h2><p>咳咳咳<br>解释一下英语老师的事啊<br>就是上英语课的时候，我去桌子里拿了英语的抄写本啊<br>然后手出来的时候不小心把我口袋里的橘子弄破了<br>摸了一下，发现只有皮破了，其他还好<br>就习惯性地皱了一下眉头，然后被老师发现了……<br>后面的事就不说了，大家都知道<br>还有英语老师，你也不用脑子想想，我画的思维导图都把你讲的都写下来了<br>还不会？？？<br>PS：最近谣言比较多，大家听见有关于侮辱我的，千万不要信，一切以官方的消息为主！！！</p>
<h2 id="2022-2-16"><a href="#2022-2-16" class="headerlink" title="2022.2.16"></a>2022.2.16</h2><p>害~<br>这几天啊<br>我一直在想一个问题<br>为什么<br>同学总是来问我题目？<br>是因为我太聪明了？ 不，不可能，谁都知道，我并不聪明，只是一个偶尔逆袭上来的学渣<br>是因为我心太软了？ 不，不可能，我觉得我心并不软<br>可为什么都来问我<br>我貌似想通了，因为我太弱了<br>不然为什么基本没人去向我前面的学霸请教？<br>不然为什么基本没人去向我后面的后面的学霸请教？<br>不然为什么基本没人去向我左边的后面的学霸请教？<br>可能我就是太弱了吧<br>所以，从明天起，我要提升！！！！</p>
<h2 id="2022-2-17"><a href="#2022-2-17" class="headerlink" title="2022.2.17"></a>2022.2.17</h2><p>完了完了，感觉我试卷要考砸了！！！！<br>什么都不想写<br>完了，我完了<br>我看不见后天的太阳了！！！<br>呜呜呜……<br>最后的希望……</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=5285415&auto=0&height=66"></iframe>

<h2 id="2022-2-18"><a href="#2022-2-18" class="headerlink" title="2022.2.18"></a>2022.2.18</h2><p>啊啊啊<br>快要发试卷了！！！<br>有几位<del>勇士</del>同学已经去翻过试卷了<br>他们说我100<br>我不信<br>他们说肯定是的<br>然后我和他们打赌说你们不是经常说我狗吗，如果我考到100的话我你们以后就正式叫我狗好了<br>中午<br>瞬间打脸<br>还真的是100<br>额……</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 在家里拿一个印章（同学背课文要盖）</li>
</ul>
<h2 id="2022-2-21"><a href="#2022-2-21" class="headerlink" title="2022.2.21"></a>2022.2.21</h2><p><a href="https://xys-blog.cf/posts/918071535.html">主要事件传送门</a></p>
<h2 id="2022-2-22"><a href="#2022-2-22" class="headerlink" title="2022.2.22"></a>2022.2.22</h2><p>没什么好写的<br>整一天都在辟谣<br>最近谣言比较多，大家千万不要信！！！<br>另外，祝大家2022年2月22日快乐！！！<br><del>但我马上就要八比Q了</del></p>
<p>但是</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=255294&auto=1&height=66"></iframe>

<p><del>才怪</del></p>
<h2 id="2022-2-24"><a href="#2022-2-24" class="headerlink" title="2022.2.24"></a>2022.2.24</h2><p>啊啊啊，我终于回来了<br>最近我感觉自己比较伤心，但不知道为什么伤心<br><del>又开始装了</del><br>咳咳咳<br>进入正题<br>最近我们学校的老师和上虞区的出题人考试对我们进行压榨<br><del>以至于我昨天没有更新</del><br>这是一件让人感到很奇怪的事<br>六年级下册要补上册的期末考试？<br>所以……<br>我去复习了<br><del>别想我</del></p>
<h2 id="2022-2-25"><a href="#2022-2-25" class="headerlink" title="2022.2.25"></a>2022.2.25</h2><p>emmmmm……</p>
<h2 id="2022-2-28"><a href="#2022-2-28" class="headerlink" title="2022.2.28"></a>2022.2.28</h2><p>额，没什么好写的<br>明天又双叒叕要数学考试<br>不过说句闲话<br>这MD（MarkDown）语法还真的挺好用的诶<br><del>又开始扯了</del><br>算了<br>拜拜</p>
]]></content>
      <tags>
        <tag>游记</tag>
        <tag>学校</tag>
      </tags>
  </entry>
  <entry>
    <title>小学奥数公式</title>
    <url>/posts/1563617092/</url>
    <content><![CDATA[<p>1、 每份数×份数＝总数 总数÷每份数＝份数总数÷份数＝每份数</p>
<p>2、 1倍数×倍数＝几倍数 几倍数÷1倍数＝倍数几倍数÷倍数＝1倍数</p>
<p>3、 速度×时间＝路程 路程÷速度＝时间 路程÷时间＝速度</p>
<p>4、 单价×数量＝总价 总价÷单价＝数量 总价÷数量＝单价</p>
<p>5、 工作效率×工作时间＝工作总量 工作总量÷工作效率＝工作时间工作总量÷工作时间＝工作效率</p>
<p>6、 加数＋加数＝和 和－一个加数＝另一个加数</p>
<span id="more"></span>


<p>7、 被减数－减数＝差 被减数－差＝减数 差＋减数＝被减数</p>
<p>8、 因数×因数＝积 积÷一个因数＝另一个因数</p>
<p>9、 被除数÷除数＝商 被除数÷商＝除数 商×除数＝被除数</p>
<p>-图形计算公式：</p>
<p>1 、正方形 C周长 S面积 a边长 周长＝边长×4 C&#x3D;4a 面积&#x3D;边长×边长</p>
<p>2 、正方体 V:体积 a:棱长 表面积&#x3D;棱长×棱长×6 S表&#x3D;a×a×6 体积&#x3D;棱长×棱长×棱长 V&#x3D;a×a×a</p>
<p>3 、长方形 C周长 S面积 a边长</p>
<p>周长&#x3D;(长+宽)×2</p>
<p>C&#x3D;2(a+b)</p>
<p>面积&#x3D;长×宽</p>
<p>S&#x3D;ab</p>
<p>4 、长方体</p>
<p>V:体积 s:面积 a:长 b: 宽 h:高 . |</p>
<p>(1)表面积(长×宽+长×高+宽×高)×2</p>
<p>S&#x3D;2(ab+ah+bh)</p>
<p>(2)体积&#x3D;长×宽×高</p>
<p>V&#x3D;abh</p>
<p>5 三角形</p>
<p>s面积 a底 h高</p>
<p>面积&#x3D;底×高÷2</p>
<p>s&#x3D;ah÷2</p>
<p>三角形高&#x3D;面积 ×2÷底</p>
<p>三角形底&#x3D;面积 ×2÷高</p>
<p>6 平行四边形</p>
<p>s面积 a底 h高</p>
<p>面积&#x3D;底×高</p>
<p>s&#x3D;ah</p>
<p>7 梯形</p>
<p>s面积 a上底 b下底 h高</p>
<p>面积&#x3D;(上底+下底)×高÷2</p>
<p>s&#x3D;(a+b)× h÷2</p>
<p>8 圆形 ,</p>
<p>S面积 C周长 ∏ d&#x3D;直径 r&#x3D;半径</p>
<p>(1)周长&#x3D;直径×∏&#x3D;2×∏×半径</p>
<p>C&#x3D;∏d&#x3D;2∏r</p>
<p>(2)面积&#x3D;半径×半径×∏</p>
<p>9 圆柱体</p>
<p>v:体积 h:高 s;底面积 r:底面半径 c:底面周长</p>
<p>(1)侧面积&#x3D;底面周长×高</p>
<p>(2)表面积&#x3D;侧面积+底面积×2</p>
<p>(3)体积&#x3D;底面积×高</p>
<p>（4）体积＝侧面积÷2×半径</p>
<p>10 圆锥体</p>
<p>v:体积 h:高 s;底面积 r:底面半径</p>
<p>体积&#x3D;底面积×高÷3</p>
<p>)</p>
<p>奥数常用公式：</p>
<p>和差问题的公式</p>
<p>(和＋差)÷2＝大数</p>
<p>(和－差)÷2＝小数</p>
<p>和倍问题</p>
<p>和÷(倍数－1)＝小数</p>
<p>小数×倍数＝大数</p>
<p>(或者 和－小数＝大数)</p>
<p>差倍问题</p>
<p>差÷(倍数－1)＝小数</p>
<p>小数×倍数＝大数</p>
<p>(或 小数＋差＝大数)</p>
<p>植树问题</p>
<p>1 非封闭线路上的植树问题主要可分为以下三种情形:</p>
<p>⑴如果在非封闭线路的两端都要植树,那么:</p>
<p>全长＝株距×(株数－1)</p>
<p>株距＝全长÷(株数－1)</p>
<p>⑵如果在非封闭线路的一端要植树,另一端不要植树,那么:</p>
<p>株数＝段数＝全长÷株距</p>
<p>全长＝株距×株数</p>
<p>株距＝全长÷株数</p>
<p>⑶如果在非封闭线路的两端都不要植树,那么</p>
<p>株数＝段数－1＝全长÷株距－1</p>
<p>全长＝株距×(株数＋1)</p>
<p>株距＝全长÷(株数＋1) .</p>
<p>2 封闭线路上的植树问题的数量关系如下</p>
<p>株数＝段数＝全长÷株距</p>
<p>全长＝株距×株数</p>
<p>株距＝全长÷株数</p>
<p>盈亏问题</p>
<p>(盈＋亏)÷两次分配量之差＝参加分配的份数</p>
<p>(大盈－小盈)÷两次分配量之差＝参加分配的份数</p>
<p>(大亏－小亏)÷两次分配量之差＝参加分配的份数</p>
<p>相遇问题</p>
<p>相遇路程＝速度和×相遇时间</p>
<p>相遇时间＝相遇路程÷速度和</p>
<p>速度和＝相遇路程÷相遇时间</p>
<p>追及问题</p>
<p>追及距离＝速度差×追及时间</p>
<p>追及时间＝追及距离÷速度差</p>
<p>速度差＝追及距离÷追及时间</p>
<p>流水问题</p>
<p>顺流速度＝静水速度＋水流速度</p>
<p>逆流速度＝静水速度－水流速度</p>
<p>浓度问题 ,</p>
<p>溶质的重量＋溶剂的重量＝溶液的重量</p>
<p>溶质的重量÷溶液的重量×100%＝浓度</p>
<p>溶液的重量×浓度＝溶质的重量</p>
<p>溶质的重量÷浓度＝溶液的重量</p>
<p>利润与折扣问题</p>
<p>利润＝售出价－成本</p>
<p>利润率＝利润÷成本×100%＝(售出价÷成本－1)×100%</p>
<p>涨跌金额＝本金×涨跌百分比</p>
<p>折扣＝实际售价÷原售价×100%</p>
<p>利息＝本金×利率×时间</p>
<p>税后利息＝本金×利率×时间×(1－20%)</p>
<p>长度单位换算：</p>
<p>1千米&#x3D;1000米 1米&#x3D;10分米 )</p>
<p>1分米&#x3D;10厘米 1米&#x3D;100厘米</p>
<p>1厘米&#x3D;10毫米</p>
<p>面积单位换算</p>
<p>1平方千米&#x3D;100公顷</p>
<p>1公顷&#x3D;10000平方米</p>
<p>1平方米&#x3D;100平方分米</p>
<p>1平方分米&#x3D;100平方厘米</p>
<p>1平方厘米&#x3D;100平方毫米 .</p>
<p>体(容)积单位换算</p>
<p>1立方米&#x3D;1000立方分米</p>
<p>1立方分米&#x3D;1000立方厘米 :</p>
<p>1立方分米&#x3D;1升 .</p>
<p>1立方厘米&#x3D;1毫升</p>
<p>1立方米&#x3D;1000升</p>
<p>重量单位换算：</p>
<p>1吨&#x3D;1000 千克</p>
<p>1千克&#x3D;1000克</p>
<p>1千克&#x3D;1公斤</p>
<p>人民币单位换算</p>
<p>1元&#x3D;10角</p>
<p>1角&#x3D;10分</p>
<p>1元&#x3D;100分</p>
<p>时间单位换算</p>
<p>1世纪&#x3D;100年 1年&#x3D;12月</p>
<p>大月(31天)有:1\3\5\7\8\10\12月</p>
<p>小月(30天)的有:4\6\9\11月</p>
<p>平年2月28天, 闰年2月29天</p>
<p>平年全年365天, 闰年全年366天 ‘</p>
<p>1日&#x3D;24小时 1时&#x3D;60分 ,</p>
<p>1分&#x3D;60秒 1时&#x3D;3600秒</p>
<p>几何形体周长 面积 体积计算公式</p>
<ul>
<li></li>
</ul>
<p>1、长方形的周长&#x3D;（长+宽）×2</p>
<p>2、正方形的周长&#x3D;边长×4 C&#x3D;4a</p>
<p>3、长方形的面积&#x3D;长×宽 S&#x3D;ab</p>
<p>4、正方形的面积&#x3D;边长×边长 S&#x3D;a.a</p>
<p>5、三角形的面积&#x3D;底×高÷2 S&#x3D;ah÷2</p>
<p>6、平行四边形的面积&#x3D;底×高 S&#x3D;ah :</p>
<p>7、梯形的面积&#x3D;（上底+下底）×高÷2 S&#x3D;（a＋b）h÷2</p>
<p>8、直径&#x3D;半径×2 d&#x3D;2r 半径&#x3D;直径÷2 r&#x3D; d÷2</p>
<p>9、圆的周长&#x3D;圆周率×直径&#x3D;圆周率×半径×2 c&#x3D;πd &#x3D;2πr</p>
<p>10、圆的面积&#x3D;圆周率×半径×半径</p>
]]></content>
      <tags>
        <tag>言射学习</tag>
        <tag>小学奥数</tag>
      </tags>
  </entry>
  <entry>
    <title>小黑屋（黑名单）</title>
    <url>/posts/2531786604/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="845d5bf1cf54a38157860de0d6ae1263bf581ec278c5c12d02e431671a813b44">51d714a1c2f3105f7d25e4a48f156d974fa732cc73622346f303fd2b5f9b86735c8e638e81d8b177f7a74182b45b73c343af6e0d7c187d1e63edb50b506c196338a383e7e7002f576a64beefece17bab3cbe088cc7063ffc4b571735286d49eb58b0d2e3213d04a57d84407297162a1ff4a0e3c27b42c5d84cdd6acffd7699e8c718113abf4e8f7707194c53497501d40e7e060c9355c6ec10ecf8cc7933995a9c4c7b1601b101fbea1fe74ac8547f3904b31db9848395fd554cd89eeb8bf9bc65165f343ce7958b269ee4c8aa6c37be032778eb306567cc844351c1965e68e825b0c1b4c277e7db06842c0ccf296cfadd78ca14db8d7817e698eb9e3fd22ffc82cbc7212bca679831954a9fea0094c86cc932d966ba808d5ae7c15e26e1486424233ed8b2104ec3a08e3b20ce2fe2bf8684526ae2b94f71c8ac9b8923561ffff97481ab4ce7b7b37775377c820d30c3f4918ff77fda31e4075ae19467988d7a85dfd000f5a59301b691f85534d992e07d15892f97482d747e97c03b6106d0b8ac9985962dcf0e64e36d9249a86da6497cde4bed3784472897203fa1fd6bb9b7ed8413e08de5bfe5dc0312c6abfc3109d804cb45313308fd7069414cf2ea1a5e8a42ad214ee7caaa5835757e4553fffbeef17b62f438a8892b959531681fa61e4f49668479398fd93c60d9446e94c524e550476f8827f8d3adbaab24091f78b72b47db84e4bb4948d0d37c73ee92f76272a762087e2e1e5eb082c34953c0ac798cb8b9e979d29b1d3544b221deaa8ff579cafaa58e8d532ce86572af868ba2253e8bea6edfc3369c6097d0fcd835347490383a2b2a5931897a8b257dff6780bbe9996910973bffb25a850565ac55289f8b1e52045fcdff45fa0da598325a564de62cc6466d740182faa8ecb28d3c552a5cecc7c9ef98a91a818ff997ca80fde2cd97e4c70660b845ff6991e096af70890086c28420490ea26ab830338e3f7a5f903c682bbc8a057b0c8f8e4931219eb58268b4e06bb383e41aa53ebaa83a533eff90e1e0e4d7f539a20c187da2189230360e6729f4136903b41e7b12a55a9bab50f269989989a14e990cc97791705c4b5b88e4fb3a8b69111f3481e2694ccf7abec4878daa8b1be1b81a97072d5ae314b23b1edb4346464e8b5980f6f8b83df4e8ef971438544e9cfa11ffb6994d57cc1bfd00685e53087ce23f39ae6513dbcc452f1f52fcda9aabb1be83ebb189e5448d8dc0234dc8137ba488a8493c5ab76db7f09a05e2dc98b90f8ce309f9686c45d00e472b90831c4a453abd037d0f35df31e6f2d8240fc15bb76e8c50ada5ec075b98919d0aed9056620e6a8c46307285bd6a48c7cfc5f8f01c4d974715f857e60588f80328d7e0c84b0a60498f02d5b34d875561759657c4faee6543cead8a9d745877281e0d8027232c1d7773e3ce6adb89a311703793e77bc875db2d1da3b0e3c7ce14ae4a623117e06a2d7f8687f1ff2b4e4cfd7fa63905bbb2a3444730d0649d23236d6342399846b05248f1c0fafe18256eb3da37a28e199cffcd95a17532daa3357563a33aed6ce2eea47ba92acca28bae3b2f99ba9ea29f7f036fe1764fdeb1c8a51cd9f99b88d81726970ae992e1a047812a8213a1e4a7b04af6399c901ba31127e00dfb5f722dbea9f632584e45ffc5b1d59a70cff355130c2f63c8cc6646cfc2a0f5e6941e849ea0b3d0f52b580a03fa966a9d620ac88ffb30b05e</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这篇文章设置了密码，请点击此处以输入</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>平凡（改编自朱自清的《匆匆》）</title>
    <url>/posts/3919692788/</url>
    <content><![CDATA[<center>《平凡》</center>

<p>燕子去了，有再来的时候；杨柳枯了，有再青的时候；桃花谢了，有再开的时候。但是，聪明的，你告诉我，我们的满分为什么一去不复返呢？——是有人偷了他们罢：那是谁？又藏在何处呢？是他们自己逃走了罢：如今（现在）又到了哪里呢？</p>
<span id="more"></span>

<p>我不知道他们给了我多少满分，但我的手确乎是渐渐空虚了。在默默里算着，八千多满分已经从我手中溜去，像针尖上一滴水滴在大海里，我的满分滴在成绩的流里，没有声音，也没有影子。我不禁头涔涔而泪潸潸了。</p>
<p>去的尽管去了，来的尽管来着；去来的中间，又怎样地平凡呢？早上我起来的时候，小屋里射进两三方斜斜的太阳。太阳他有脚啊，轻轻悄悄地挪移了；我也茫茫然跟着旋转。于是——洗手的时候，满分从水盆里过去；吃饭的时候，满分从饭碗里过去；默默时，便从凝然的双眼前过去。我觉察他去的平凡了，伸出手遮挽时，他又从遮挽着的手边过去，天黑时，我躺在床上，他便伶伶俐俐地从我身上跨过，从我脚边飞去了。等我睁开眼和太阳再见，这算又溜走了一日。我掩着面叹息。但是新来的满分的影儿又开始在叹息里闪过了。</p>
<p>在逃去如飞的满分里，在千门万户的世界里的我能做些什么呢？只有徘徊罢了，只有平凡罢了；在八千多日的平凡里，除徘徊外，又剩些什么呢？过去的满分如轻烟，被微风吹散了，如薄雾，被初阳蒸融了；我留着些什么痕迹呢？我何曾留着像游丝样的痕迹呢？我赤裸裸来到这世界，转眼间也将赤裸裸的回去罢？但不能平的，为什么偏要白白走这一遭啊？</p>
<p>你聪明的，告诉我，我们的满分为什么一去不复返呢？</p>
<hr>
<p>往期推荐</p>
<ul>
<li><a href="https://xysn.ml/posts/746134704">《红岩》梗概</a></li>
<li><a href="https://xysn.ml/posts/3479680266">学校游记3</a></li>
<li><a href="https://xysn.ml/posts/336091895">小学数学必背公式</a></li>
<li><a href="https://xysn.ml/posts/1563617092">小学奥数公式</a></li>
<li><a href="https://xysn.ml/posts/1793860868">学校游记2</a></li>
</ul>
]]></content>
      <tags>
        <tag>文章改编</tag>
        <tag>趣文</tag>
      </tags>
  </entry>
  <entry>
    <title>小学数学必背公式</title>
    <url>/posts/336091895/</url>
    <content><![CDATA[<p>概 念</p>
<p>1、加法交换律：两数相加交换加数的位置，和不变。</p>
<p>2、加法结合律：三个数相加，先把前两个数相加，或先把后两个数相加，再同第三个数相加，和不变。</p>
<p>3、乘法交换律：两数相乘，交换因数的位置，积不变。</p>
<p>4、乘法结合律：三个数相乘，先把前两个数相乘，或先把后两个数相乘，再和第三个数相乘，它们的积不变。</p>
<p>5、乘法分配律：两个数的和同一个数相乘，可以把两个加数分别同这个数相乘，再把两个积相加，结果不变。如：（2+4）×5＝2×5+4×5</p>
<p>6、除法的性质：在除法里，被除数和除数同时扩大（或缩小）相同的倍数，商不变。O除以任何不是O的数都得O。</p>
<span id="more"></span>

<p>简便乘法：被乘数、乘数末尾有O的乘法，可以先把O前面的相乘，零不参加运算，有几个零都落下，添在积的末尾。</p>
<p>7、么叫等式？等号左边的数值与等号右边的数值相等的式子叫做等式。</p>
<p>等式的基本性质：等式两边同时乘以（或除以）一个相同的数，等式仍然成立。</p>
<p>8、什么叫方程式？答：含有未知数的等式叫方程式。</p>
<p>9、 什么叫一元一次方程式？答：含有一个未知数，并且未知数的次数是一次的等式叫做一元一次方程式。学会一元一次方程式的例法及计算。即例出代有χ的算式并计算。</p>
<p>10、分数：把单位“1”平均分成若干份，表示这样的一份或几分的数,叫做分数。</p>
<p>11、分数的加减法则：同分母的分数相加减，只把分子相加减，分母不变。异分母的分数相加减，先通分，然后再加减。</p>
<p>12、分数大小的比较：同分母的分数相比较，分子大的大，分子小的小。异分母的分数相比较，先通分然后再比较；若分子相同，分母大的反而小。</p>
<p>13、分数乘整数，用分数的分子和整数相乘的积作分子，分母不变。</p>
<p>14、分数乘分数，用分子相乘的积作分子，分母相乘的积作为分母。</p>
<p>15、分数除以整数（0除外），等于分数乘以这个整数的倒数。</p>
<p>16、真分数：分子比分母小的分数叫做真分数。</p>
<p>17、假分数：分子比分母大或者分子和分母相等的分数叫做假分数。假分数大于或等于1。</p>
<p>18、带分数：把假分数写成整数和真分数的形式，叫做带分数。</p>
<p>19、分数的基本性质：分数的分子和分母同时乘以或除以同一个数（0除外），分数的大小不变。</p>
<p>20、一个数除以分数，等于这个数乘以分数的倒数。</p>
<p>21、甲数除以乙数（0除外），等于甲数乘以乙数的倒数。</p>
<p>分数的加、减法则：同分母的分数相加减，只把分子相加减，分母不变。异分母的分数相加减，先通分，然后再加减。</p>
<p>分数的乘法则：用分子的积做分子，用分母的积做分母。</p>
<p>22、什么叫比：两个数相除就叫做两个数的比。如：2÷5或3:6或1&#x2F;3，比的前项和后项同时乘以或除以一个相同的数（0除外），比值不变。</p>
<p>23、什么叫比例：表示两个比相等的式子叫做比例。如3:6＝9:18</p>
<p>24、比例的基本性质：在比例里，两外项之积等于两内项之积。</p>
<p>25、解比例：求比例中的未知项，叫做解比例。如3:χ＝9:18</p>
<p>26、正比例：两种相关联的量，一种量变化，另一种量也随着化，如果这两种量中相对应的的比值（也就是商k）一定，这两种量就叫做成正比例的量，它们的关系就叫做正比例关系。如：y&#x2F;x&#x3D;k( k一定)或kx&#x3D;y</p>
<p>27、反比例：两种相关联的量，一种量变化，另一种量也随着变化，如果这两种量中相对应的两个数的积一定，这两种量就叫做成反比例的量，它们的关系就叫做反比例关系。如：x×y &#x3D; k( k一定)或k &#x2F; x &#x3D; y</p>
<p>28、百分数：表示一个数是另一个数的百分之几的数，叫做百分数。百分数也叫做百分率或百分比。</p>
<p>29、把小数化成百分数，只要把小数点向右移动两位，同时在后面添上百分号。其实，把小数化成百分数，只要把这个小数乘以100％就行了。</p>
<p>30、把百分数化成小数，只要把百分号去掉，同时把小数点向左移动两位。</p>
<p>31、把分数化成百分数，通常先把分数化成小数（除不尽时，通常保留三位小数），再把小数化成百分数。其实，把分数化成百分数，要先把分数化成小数后，再乘以100％就行了。</p>
<p>32、把百分数化成分数，先把百分数改写成分数，能约分的要约成最简分数。</p>
<p>33、要学会把小数化成分数和把分数化成小数的化发。</p>
<p>34、最大公约数：几个数都能被同一个数一次性整除，这个数就叫做这几个数的最大公约数。（或几个数公有的约数，叫做这几个数的公约数。其中最大的一个，叫做最大公约数。）</p>
<p>35、互质数：公约数只有1的两个数，叫做互质数。</p>
<p>36、最小公倍数：几个数公有的倍数，叫做这几个数的公倍数，其中最小的一个叫做这几个数的最小公倍数。</p>
<p>37、通分：把异分母分数的分别化成和原来分数相等的同分母的分数，叫做通分。（通分用最小公倍数）</p>
<p>38、约分：把一个分数化成同它相等，但分子、分母都比较小的分数，叫做约分。（约分用最大公约数）</p>
<p>39、最简分数：分子、分母是互质数的分数，叫做最简分数。</p>
<p>40、分数计算到最后，得数必须化成最简分数。</p>
<p>41、个位上是0、2、4、6、8的数，都能被2整除，即能用2进行</p>
<p>42、约分。个位上是0或者5的数，都能被5整除，即能用5进行约分。在约分时应注意利用。</p>
<p>43、偶数和奇数：能被2整除的数叫做偶数。不能被2整除的数叫做奇数。</p>
<p>44、质数（素数）：一个数，如果只有1和它本身两个约数，这样的数叫做质数（或素数）。</p>
<p>45、合数：一个数，如果除了1和它本身还有别的约数，这样的数叫做合数。1不是质数，也不是合数。</p>
<p>46、利息＝本金×利率×时间（时间一般以年或月为单位，应与利率的单位相对应）</p>
<p>47、利率：利息与本金的比值叫做利率。一年的利息与本金的比值叫做年利率。一月的利息与本金的比值叫做月利率。</p>
<p>48、自然数：用来表示物体个数的整数，叫做自然数。0也是自然数。</p>
<p>49、循环小数：一个小数，从小数部分的某一位起，一个数字或几个数字依次不断的重复出现，这样的小数叫做循环小数。如3. 141414</p>
<p>50、不循环小数：一个小数，从小数部分起，没有一个数字或几个数字依次不断的重复出现，这样的小数叫做不循环小数。如圆周率：3. 141592654</p>
<p>51、无限不循环小数：一个小数，从小数部分起到无限位数，没有一个数字或几个数字依次不断的重复出现，这样的小数叫做无限不循环小数。如3. 141592654……</p>
<p>52、什么叫代数?代数就是用字母代替数。</p>
<p>53、什么叫代数式?用字母表示的式子叫做代数式。如：3x &#x3D;ab+c</p>
<p>关系表达式</p>
<p>1、每份数×份数＝总数总数÷每份数＝份数总数÷份数＝每份数</p>
<p>2、 1倍数×倍数＝几倍数几倍数÷1倍数＝倍数几倍数÷倍数＝1倍数 3、速度×时间＝路程路程÷速度＝时间路程÷时间＝速度</p>
<p>4、单价×数量＝总价总价÷单价＝数量总价÷数量＝单价</p>
<p>5、工作效率×工作时间＝工作总量工作总量÷工作效率＝工作时间工作总量÷工作时间＝工作效率</p>
<p>6、加数＋加数＝和和－一个加数＝另一个加数</p>
<p>7、被减数－减数＝差被减数－差＝减数差＋减数＝被减数</p>
<p>8、因数×因数＝积积÷一个因数＝另一个因数</p>
<p>9、被除数÷除数＝商被除数÷商＝除数商×除数＝被除数</p>
<p>总数÷总份数＝平均数</p>
<p>和差问题的公式</p>
<p>(和＋差)÷2＝大数</p>
<p>(和－差)÷2＝小数</p>
<p>和倍问题</p>
<p>和÷(倍数－1)＝小数</p>
<p>小数×倍数＝大数</p>
<p>(或者和－小数＝大数)</p>
<p>差倍问题</p>
<p>差÷(倍数－1)＝小数</p>
<p>小数×倍数＝大数</p>
<p>(或小数＋差＝大数)</p>
<p>植树问题</p>
<p>1 非封闭线路上的植树问题主要可分为以下三种情形:</p>
<p>⑴如果在非封闭线路的两端都要植树,那么:</p>
<p>株数＝段数＋1＝全长÷株距－1</p>
<p>全长＝株距×(株数－1)</p>
<p>株距＝全长÷(株数－1)</p>
<p>⑵如果在非封闭线路的一端要植树,另一端不要植树,那么:</p>
<p>株数＝段数＝全长÷株距</p>
<p>全长＝株距×株数</p>
<p>株距＝全长÷株数</p>
<p>⑶如果在非封闭线路的两端都不要植树,那么:</p>
<p>株数＝段数－1＝全长÷株距－1</p>
<p>全长＝株距×(株数＋1)</p>
<p>株距＝全长÷(株数＋1)</p>
<p>2 封闭线路上的植树问题的数量关系如下</p>
<p>株数＝段数＝全长÷株距</p>
<p>全长＝株距×株数</p>
<p>株距＝全长÷株数</p>
<p>盈亏问题</p>
<p>(盈＋亏)÷两次分配量之差＝参加分配的份数</p>
<p>(大盈－小盈)÷两次分配量之差＝参加分配的份数</p>
<p>(大亏－小亏)÷两次分配量之差＝参加分配的份数</p>
<p>相遇问题</p>
<p>相遇路程＝速度和×相遇时间</p>
<p>相遇时间＝相遇路程÷速度和</p>
<p>速度和＝相遇路程÷相遇时间</p>
<p>追及问题</p>
<p>追及距离＝速度差×追及时间</p>
<p>追及时间＝追及距离÷速度差</p>
<p>速度差＝追及距离÷追及时间</p>
<p>流水问题</p>
<p>顺流速度＝静水速度＋水流速度</p>
<p>逆流速度＝静水速度－水流速度</p>
<p>静水速度＝(顺流速度＋逆流速度)÷2</p>
<p>水流速度＝(顺流速度－逆流速度)÷2</p>
<p>浓度问题</p>
<p>溶质的重量＋溶剂的重量＝溶液的重量</p>
<p>溶质的重量÷溶液的重量×100%＝浓度</p>
<p>溶液的重量×浓度＝溶质的重量</p>
<p>溶质的重量÷浓度＝溶液的重量</p>
<p>利润与折扣问题</p>
<p>利润＝售出价－成本</p>
<p>利润率＝利润÷成本×100%＝(售出价÷成本－1)×100%</p>
<p>涨跌金额＝本金×涨跌百分比</p>
<p>折扣＝实际售价÷原售价×100%(折扣＜1)</p>
<p>利息＝本金×利率×时间</p>
<p>税后利息＝本金×利率×时间×(1－20%)</p>
<p>单位间进率</p>
<p>1公里＝1千米 1千米＝1000 米</p>
<p>1米＝10分米 1分米＝10厘米 1厘米＝10毫米</p>
<p>1平方米＝100平方分米 1平方分米＝100平方厘米 1平方厘米＝100平方毫米</p>
<p>1立方米＝1000立方分米 1立方分米＝1000立方厘米 1立方厘米＝1000立方毫米</p>
<p>1吨＝1000千克 1千克&#x3D; 1000克&#x3D; 1公斤&#x3D; 1市斤</p>
<p>1公顷＝10000平方米 1亩＝666.666平方米</p>
<p>1升＝1立方分米＝1000毫升 1毫升＝1立方厘米</p>
<p>面积单位换算</p>
<p>1平方千米&#x3D;100公顷</p>
<p>1公顷&#x3D;10000平方米</p>
<p>1平方米&#x3D;100平方分米</p>
<p>1平方分米&#x3D;100平方厘米</p>
<p>1平方厘米&#x3D;100平方毫米</p>
<p>体(容)积单位换算</p>
<p>1立方米&#x3D;1000立方分米</p>
<p>1立方分米&#x3D;1000立方厘米</p>
<p>1立方分米&#x3D;1升</p>
<p>1立方厘米&#x3D;1毫升</p>
<p>1立方米&#x3D;1000升</p>
<p>重量单位换算</p>
<p>1吨&#x3D;1000 千克</p>
<p>1千克&#x3D;1000克</p>
<p>1千克&#x3D;1公斤</p>
<p>人民币单位换算</p>
<p>1元&#x3D;10角</p>
<p>1角&#x3D;10分</p>
<p>1元&#x3D;100分</p>
<p>时间单位换算</p>
<p>1世纪&#x3D;100年 1年&#x3D;12月</p>
<p>大月(31天)有:135781012月</p>
<p>小月(30天)的有:46911月</p>
<p>平年2月28天, 闰年2月29天</p>
<p>平年全年365天, 闰年全年366天</p>
<p>1日&#x3D;24小时 1时&#x3D;60分</p>
<p>1分&#x3D;60秒 1时&#x3D;3600秒</p>
<p>几何形体周长面积体积计算公式</p>
<p>1、长方形的周长&#x3D;（长+宽）×2 C&#x3D;(a+b)×2</p>
<p>2、正方形的周长&#x3D;边长×4 C&#x3D;4a</p>
<p>3、长方形的面积&#x3D;长×宽 S&#x3D;ab</p>
<p>4、正方形的面积&#x3D;边长×边长 S&#x3D;a.a&#x3D; a</p>
<p>5、三角形的面积&#x3D;底×高÷2 S&#x3D;ah÷2</p>
<p>6、平行四边形的面积&#x3D;底×高 S&#x3D;ah</p>
<p>7、梯形的面积&#x3D;（上底+下底）×高÷2 S&#x3D;（a＋b）h÷2</p>
<p>8、直径&#x3D;半径×2 d&#x3D;2r 半径&#x3D;直径÷2 r&#x3D; d÷2</p>
<p>9、圆的周长&#x3D;圆周率×直径&#x3D;圆周率×半径×2 c&#x3D;πd &#x3D;2πr</p>
<p>10、圆的面积&#x3D;圆周率×半径×半径</p>
<p>11、长方体的表面积＝（长×宽＋长×高＋宽×高） ×2 公式：S&#x3D;（a×b+a×c+b×c）×2</p>
<p>12、长方体的体积＝长×宽×高公式：V &#x3D; abh</p>
<p>13、正方体的表面积＝棱长×棱长×6 公式：S&#x3D;6a2</p>
<p>14、长方体（或正方体）的体积＝底面积×高公式：V &#x3D; abh</p>
<p>15、正方体的体积＝棱长×棱长×棱长公式：V &#x3D; a3</p>
<p>16、圆柱的表（侧）面积：圆柱的表（侧）面积等于底面的周长乘高。公式：S&#x3D;ch&#x3D;πdh＝2πrh</p>
<p>17、圆柱的表面积：圆柱的表面积等于底面的周长乘高再加上两头的圆的面积。公式：S&#x3D;ch+2s&#x3D;ch+2πr2</p>
<p>18、圆柱的体积：圆柱的体积等于底面积乘高。公式：V&#x3D;Sh</p>
<p>19、圆锥的体积＝1&#x2F;3底面×积高。公式：V&#x3D;1&#x2F;3Sh</p>
]]></content>
      <tags>
        <tag>言射学习</tag>
        <tag>小学数学</tag>
      </tags>
  </entry>
  <entry>
    <title>文章目录</title>
    <url>/posts/2044296166/</url>
    <content><![CDATA[<p>文章目录：<a href="https://xysn.ml/archives/">https://xysn.ml/archives/</a></p>
]]></content>
      <tags>
        <tag>目录</tag>
        <tag>公告</tag>
      </tags>
  </entry>
  <entry>
    <title>我的心愿（六下第四单元习作）</title>
    <url>/posts/4093402486/</url>
    <content><![CDATA[<p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fupload-images.jianshu.io%2Fupload_images%2F17030804-dad8be302cf9035b.png&refer=http%3A%2F%2Fupload-images.jianshu.io&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1651667288&t=00c778c612971c237c83419b270f55e1" alt="其实,有些愿望不在于实现,想想也是美的(来源百度,侵删)"></p>
<center>《我的心愿》</center>

<span id="more"></span>

<p>我的心愿是什么？</p>
<p>让我轻轻告诉你。</p>
<p>让地球变得美丽，</p>
<p>小河，不再浑浊，变得清澈；</p>
<p>大地，不再荒凉，变得生气；</p>
<p>天空，不再阴霾，变得灿烂。</p>
<p>让无家可归的小动物拥有乐园；</p>
<p>让乱丢的垃圾拥有各自的归宿；</p>
<p>让人类与大自然和谐相处。</p>
<p>保护环境，人人有责。</p>
<p>我的心愿是什么？</p>
<p>让我悄悄告诉你。</p>
<p>让疫情快快过去，</p>
<p>病毒，不再致病，变得有益；</p>
<p>医生，不再疲惫，变得充沛；</p>
<p>我们，不再惊慌，变得安定。</p>
<p>让我们的家园从此再没有疫情；</p>
<p>让每一个人都拥有健康的身体；</p>
<p>让我们一起携手共克时艰。</p>
<p>坚定信心，同舟共济。</p>
<p>我的心愿是什么？</p>
<p>让我慢慢告诉你。</p>
<p>让我们努力进取，</p>
<p>过去，不再留念，变得坦然；</p>
<p>现在，不再退怯，变得勇敢；</p>
<p>未来，不再迷茫，变得期待。</p>
<p>让我们一起苦心励志心怀感恩；</p>
<p>让我们不忘初心归来仍是少年；</p>
<p>让我们回首过去展望未来。</p>
<p>以梦为马，不负韶华。</p>
<hr>
<p>往期推荐</p>
<ul>
<li><a href="https://xysn.ml/posts/746134704">《红岩》梗概</a></li>
<li><a href="https://xysn.ml/posts/3479680266">学校游记3（未完待续……）</a></li>
<li><a href="https://xysn.ml/posts/336091895">小学数学必背公式</a></li>
<li><a href="https://xysn.ml/posts/1563617092">小学奥数公式</a></li>
<li><a href="https://xysn.ml/posts/1793860868">学校游记2</a></li>
</ul>
]]></content>
      <tags>
        <tag>言射学习</tag>
      </tags>
  </entry>
  <entry>
    <title>数学日记</title>
    <url>/posts/448999358/</url>
    <content><![CDATA[<p>嘿，小伙伴们，随着春节假期的结束，手中的压岁钱收获不少吧。我一边数着红包，一边兴奋的手舞足蹈。我拿着这笔“丰厚”的收入，绞尽脑汁地想着，怎样才能好好地，合理地来安排支配这份“巨款”？爸爸提议：把这些年的压岁钱都一起存到银行里，这样不仅安全，到时候还有一定的利息。哇还有这么好的事！想到这里，我的心里就美滋滋的。</p>
<span id="more"></span>

<p>一个风和日丽的下午，我和爸爸妈妈一起来到了银行，远远的我就看到了一张利率表。内容如下：</p>
<p>整存整取<br>起存金额    期限    年利率    到期收益<br>1万    1年    2.15%    215<br>1万    2年    2.71%    542<br>5万    2年    2.75%    2750<br>1万    3年    3.4%    1020<br>1万    5年    3.4%    1700<br>注：还有一张大额存款的利率表，但是需要20万元起存。</p>
<p>我和妈妈整理了一下，我今年的压岁钱是6千元，之前的压岁钱一共是4万4千元，一共5万元，那么怎样存款才能使我的收益最大化呢？</p>
<p>如果我使用第一档的存款规则，一年后就可以收益50000*2.15%&#x3D;1075（元）</p>
<p>如果我使用第二档的存款规则，二年后就可以收益50000*2.71%*2&#x3D;2710（元）</p>
<p>如果我使用第三档的存款规则，二年后就可以收益50000*2.75%*2&#x3D;2750（元）</p>
<p>如果我使用第四档的存款规则，三年后就可以收益50000*3.4%*3&#x3D;5100（元）</p>
<p>如果我使用第五档的存款规则，五年后就可以收益50000*3.4%*5&#x3D;8500（元）</p>
<p>很明显，在这几种方案下（第三档定期3年和第五档定期5年的利率相同），第五档的存款规则所获得的利息最多，当然所需的时间也最长，通俗的讲就是时间越长利息越多，但……万一急用钱呢，怎么办？</p>
<p>让我们再好好的想一想：如果确定短时间不用，则定期时间越长越好；如果不能确定短时间不用，则定期时间长的越多越好。所谓越好，是指收益越高。例如可以分成1万元5张存单，全部定期3年（第三档定期3年和第五档定期5年的利率相同）。这样如果急需用钱，可以按需要多少取出相应存单，当然这张存单只能按活期计息了（活期利率低）。但其它存单收益却是最高的。因为3年定期比1年定期滚存（到期将利息滚入本金，即自动转存）还高。但不要存成一张存单！那样万一有事需要用钱，就只能全部取出，全部按活期计算利息了。 </p>
<p>比如我们将这5万元存定期3年（使用第三档的存款规则），在不急用的情况下3年后取出，这时候我们连本带息：50000*3.4%*3&#x3D;5100+50000&#x3D;55100（元）。</p>
<p>万一存到第二年的时候急用2万元，不满3年支取按活期利率0.3%计算，那么连本带息：50000<em>0.3%<em>2&#x3D;300+50000&#x3D;50300（元）。因为定期存款没有到期中途取出，只能按活期利息给我们算，利息就会很少。所以就需要用到上述的方法，把5万元分成1万元</em>5张存定期3年，这样我们有急用的时候按需取钱即可。存到第二年的时候急用2万元，不满3年支取按活期利率0.3%计算，那么连本带息：20000</em>0.3%<em>2&#x3D;120+20000&#x3D;20120（元）。剩下1万元的3张存定期3年，连本带息：30000</em>3.4%*3&#x3D;3060+50000&#x3D;53060（元）。两者相比较：300元和3180元，利息整整多了2880元。</p>
<p>所以，我们学习的知识需要灵活运用，生活处处有数学，数学处处有生活，学数学千万别太死板哦！</p>
]]></content>
      <tags>
        <tag>-言射学习</tag>
      </tags>
  </entry>
  <entry>
    <title>源码博客2.0发布会</title>
    <url>/posts/2610740764/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>咳咳咳，开学前再做个发布会吧<br>今天，我谢言射郑重宣布，源码博客2.0正式发布！<br><del>以后很少更新了</del><br>先不管他</p>
<span id="more"></span>

<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h2 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h2><h3 id="一只可爱的小狗"><a href="#一只可爱的小狗" class="headerlink" title="一只可爱的小狗"></a>一只可爱的小狗</h3><p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/%E6%9C%AA%E5%91%BD%E5%90%8D1644741168.png"></p>
<h3 id="新增聊天功能"><a href="#新增聊天功能" class="headerlink" title="新增聊天功能"></a>新增聊天功能</h3><p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/%E6%9C%AA%E5%91%BD%E5%90%8D1644741250.png" alt="图标"></p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/%E6%9C%AA%E5%91%BD%E5%90%8D1644741268.png" alt="聊天界面"></p>
<h3 id="背景改了"><a href="#背景改了" class="headerlink" title="背景改了"></a>背景改了</h3><p>（不给展示了，自己去看）</p>
<h3 id="访问速度加快-amp-有自定义域名了！！！（重点）"><a href="#访问速度加快-amp-有自定义域名了！！！（重点）" class="headerlink" title="访问速度加快&amp;有自定义域名了！！！（重点）"></a>访问速度加快&amp;有自定义域名了！！！（重点）</h3><p>域名换成了<a href="https://www.xys-blog.cf/">https://www.xys-blog.cf/</a><br>别再输之前那个了！！！<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/QQ%E6%88%AA%E5%9B%BE20220213163948.png"></p>
<p>PS：要域名的和我说一声，免费提供<strong>顶级域名</strong>（后缀为.tk,.ml,.ga,.gq,.cf的)</p>
<h3 id="添加了文章密码保护"><a href="#添加了文章密码保护" class="headerlink" title="添加了文章密码保护"></a>添加了文章密码保护</h3><p>某些文章增加了密码保护，如果真的要看，请在我的微信公众号（Seth本人）回复【密码】获取。</p>
<h3 id="……（还有很多）"><a href="#……（还有很多）" class="headerlink" title="……（还有很多）"></a>……（还有很多）</h3><h2 id="DEBUG"><a href="#DEBUG" class="headerlink" title="DEBUG"></a>DEBUG</h2><h3 id="加快了网站的访问速度"><a href="#加快了网站的访问速度" class="headerlink" title="加快了网站的访问速度"></a>加快了网站的访问速度</h3><h2 id="页面展示"><a href="#页面展示" class="headerlink" title="页面展示"></a>页面展示</h2><p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/%E6%9C%AA%E5%91%BD%E5%90%8D1644747240.png"></p>
<p>PS：别问我为什么这次图床够用了，因为我自己搭建了一个</p>
]]></content>
      <tags>
        <tag>源码博客</tag>
        <tag>发布会</tag>
      </tags>
  </entry>
  <entry>
    <title>言射源码博客1.0发布会</title>
    <url>/posts/1592740662/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="6aae757067011bbd5f5c487554dfdd1187e65b60aa134ceb7952ea307fcff8c9">4630436162ade97ba2718b7d0c4b3b6317f17ad06c41096014119a2c33731d71bbba77aa9f258bcc8e51cff9850b674f2be57ddc3b4dadc27440b6707b5ba2590a43c7f838a62cd1349a5073c729dd05c360663684dc3e6e787a210531d4b40bc8d86b8dd79b4b9ba7cf7f694b309dd00186318ff2f42ae6750c9438803e05f715f9c2faa29f82b6e2daf7d39683f89d0c2c8c73dae77db5ad34986b34427537a6d51f763456ddbff6e73acef4e2e520dc893e9a5607984a3616a5a8f19f54e7f1d5e7a5919d1d0f254f92ace598cc289de151f1eab8682c6174153a5eada499ed5864bb4445a2207f40125a8fe57778f79d60ccea21d4bea0eee5e25eff886f13c6708bc6cb8b8780a211fb3f8c08532675185afaef286e9e99435ff74dae5129750b1faa7a34053ec15e28c6f504cd7810ef998ee94fa3f8023266f2e415e5c3a0ae932514bf1f76b2bf3f0bba733b86c6e364e944d3180bfb1b5d3627e81b9340190cdeaff972fcfc8e1d6417cbaa1034b68bf614750f2325aaadb8da41be7f042f562d80d899ba409e5d722311747523afcd413a450659f364a6cc3c28d08a339b663e6238a675429e14e51d20365bc6684d6b20bd9938eb0143202981da29456ae8e73379beccffd70f70ed7f7674c75bffcb156ab8b0fa2187af26326dd7d55d4fd69d3ac26a0fc4bf439c0305c7784ffd0ed2e3acac687db4bfc2e69ad8fb197478d0cc08499193e4883229be05fe4de991304129cd8443b2575c4a78caad3573ed67c7ee1c365adb204b61c931ac3549848cf4398efb7dbf1485a795f19ce47f327b646401123c0e1255fe50593bcf5a3ea8087063a68a3284fa3bca24f09bf1a0219f857e8df357a8c4b597f9da2a2a6173da58d1aa89921e56d01b58be993b4993cb56e8c33424b72613cfe26ec16c6775997cb5c8bb5cf99f1acd</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这篇文章设置了密码，请点击此处以输入</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>公告</tag>
        <tag>发布会</tag>
        <tag>博客</tag>
        <tag>源码</tag>
      </tags>
  </entry>
  <entry>
    <title>言射歌单（内容来自网易云音乐）</title>
    <url>/posts/3561598079/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note success"><p>以下内容均来自网易云音乐，侵删！！！</p>
</div>

<span id="more"></span>

<h2 id="一、2022年初流行歌曲（至少是我听得到）"><a href="#一、2022年初流行歌曲（至少是我听得到）" class="headerlink" title="一、2022年初流行歌曲（至少是我听得到）"></a>一、2022年初流行歌曲（至少是我听得到）</h2><h3 id="NO-1-雪龙吟"><a href="#NO-1-雪龙吟" class="headerlink" title="NO.1 雪龙吟"></a>NO.1 雪龙吟</h3><p>链接：<a href="https://music.163.com/#/song?id=1914933323">https://music.163.com/#/song?id=1914933323</a><br>在线即听：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1914933323&auto=1&height=66"></iframe>

<h3 id="NO-2-骁"><a href="#NO-2-骁" class="headerlink" title="NO.2 骁"></a>NO.2 骁</h3><p>链接：<a href="https://music.163.com/#/song?id=1860864828">https://music.163.com/#/song?id=1860864828</a><br>在线即听：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1860864828&auto=1&height=66"></iframe>

<h3 id="NO-3-孤勇者"><a href="#NO-3-孤勇者" class="headerlink" title="NO.3 孤勇者"></a>NO.3 孤勇者</h3><p>链接： <a href="https://music.163.com/#/song?id=1901371647">https://music.163.com/#/song?id=1901371647</a><br>在线即听：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1901371647&auto=1&height=66"></iframe>

<h3 id="NO-4-星辰大海"><a href="#NO-4-星辰大海" class="headerlink" title="NO.4 星辰大海"></a>NO.4 星辰大海</h3><p>链接：<a href="https://music.163.com/#/song?id=1893699607">https://music.163.com/#/song?id=1893699607</a><br>在线即听：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1893699607&auto=1&height=66"></iframe>

<div class="note warning"><p>此音乐并非原版，因版权原因，此处放的是翻版</p>
</div>

<h3 id="NO-5-海市蜃楼"><a href="#NO-5-海市蜃楼" class="headerlink" title="NO.5 海市蜃楼"></a>NO.5 海市蜃楼</h3><p>链接：<a href="https://music.163.com/#/song?id=1831352877">https://music.163.com/#/song?id=1831352877</a><br>在线即听：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1831352877&auto=1&height=66"></iframe>

<div class="note warning"><p>此音乐并非原版，因版权原因，此处放的是翻版</p>
</div>

<h3 id="NO-6-起风了"><a href="#NO-6-起风了" class="headerlink" title="NO.6 起风了"></a>NO.6 起风了</h3><p>链接：<a href="https://music.163.com/#/song?id=1330348068">https://music.163.com/#/song?id=1330348068</a><br>在线即听：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1330348068&auto=1&height=66"></iframe>

<div class="note success"><p>此音乐为原版</p>
</div>]]></content>
      <tags>
        <tag>歌曲</tag>
      </tags>
  </entry>
  <entry>
    <title>简介</title>
    <url>/posts/1266501874/</url>
    <content><![CDATA[<h1 id="没错，这就是我的博客！"><a href="#没错，这就是我的博客！" class="headerlink" title="没错，这就是我的博客！"></a>没错，这就是我的博客！</h1><p><del>但不知是第几个了</del></p>
<p>咳咳咳，这个还是不要去说更好<br><img src="https://cdn.luogu.com.cn/upload/pic/62224.png" alt="/qq"></p>
<hr>
<p>其实，早在一个月前，我就想拥有一个属于自己，并且有<strong>独立域名的博客</strong><br>但是，我找了很久很久，找到的都是有内存限制的<br><del>气急败坏的</del>我，一下子就关掉了浏览器<br>连续两周，不再搭建博客<br>……</p>
<p>但是，我又重新看到了希望<br>偶然一天，我看见有人说可以用hexo+github来搭建<br>不光有独立域名，也没有内存限制<br>只要会cmd命令就行了<br>我十分激动<br>因为我前段时间和老师了解过cmd命令<br>然后……<br>就开始了……<br>最后……<br>搭建了你现在看到的<br>这个博客……</p>
]]></content>
      <tags>
        <tag>公告</tag>
        <tag>简介</tag>
      </tags>
  </entry>
  <entry>
    <title>谢言射教你用hexo+github搭建博客（1.准备工作）</title>
    <url>/posts/4293843122/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h2 id="或许有人会问，为什么是用github而不用coding和gitee呢？因为coding已经改版，貌似不支持静态页面了，gitee使用又很麻烦（要充钱），还要实名认证，最后还是选了github。"><a href="#或许有人会问，为什么是用github而不用coding和gitee呢？因为coding已经改版，貌似不支持静态页面了，gitee使用又很麻烦（要充钱），还要实名认证，最后还是选了github。" class="headerlink" title="或许有人会问，为什么是用github而不用coding和gitee呢？因为coding已经改版，貌似不支持静态页面了，gitee使用又很麻烦（要充钱），还要实名认证，最后还是选了github。"></a>或许有人会问，为什么是用github而不用coding和gitee呢？因为coding已经改版，貌似不支持静态页面了，gitee使用又很麻烦（要充钱），还要实名认证，最后还是选了github。</h2><p>本教程主要介绍搭建个人博客之前的准备工作，也就是您需要本地电脑安装什么样的软件。</p>
<span id="more"></span>

<h2 id="进入教程"><a href="#进入教程" class="headerlink" title="进入教程"></a>进入教程</h2><h3 id="安装文本编辑器（可选）"><a href="#安装文本编辑器（可选）" class="headerlink" title="安装文本编辑器（可选）"></a>安装文本编辑器（可选）</h3><p>博主这里选的是Visual Studio Code（简称VSCode），它安装比较方便，使用也很灵活，而且还是微软公司开发的，当然，您也可以选择其他的文本编辑器。<br>官网下载地址：<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a><br>PS：一般情况下，博主不会在博客中放附件，因为这样可能会增加博客服务器的负担。</p>
<p>下载完成后，双击打开文件<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.1.png"></p>
<p>PS：如果下载时出现警告，请选择“保留”</p>
<p>下载过程我就不多说了，一路默认即可。<br>注意！！！！<br>下载的时候安装地址可以更换，但一点要记下来，后面的步骤要用！！！</p>
<h3 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h3><p>下载地址：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.2.png"><br>如果您是Win系统，64位的，请选择画红框的部分。</p>
<p>双击打开文件。<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.3.png"></p>
<p>安装我这里也不多说了，一路默认就行。</p>
<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p>
<p>如果您是Win系统，64位的，请选择“Download for Windows”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.4.png"></p>
<p>下载好双击打卡文件，即可开始安装。<br>安装我这里也不多说了，一路默认就行。</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>这里配置一下环境变量<br>“开始”里面打卡“设置”<br>![](<a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.6">https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.6</a> (2).png)</p>
<p>搜索“环境变量”<br>点击“编辑系统环境变量”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.7.png"></p>
<p>在弹出来的窗口中点击“环境变量”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.8.png"></p>
<p>在“系统变量”中找到“Path”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.9.png"></p>
<p>双击“Path”</p>
<p>在弹出来的窗口中的<strong>空白部分</strong>增加Nodejs的下载地址<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.10.png"></p>
<p>比如我下在D盘，位置就是D盘的<br>注意！！！！<br>是文件夹的位置！！<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.11.png" alt="这个文件夹的地址！！！"></p>
<p>完成后按“确定”<br><strong>（三个窗口都按确定）</strong>即可</p>
<h3 id="验证安装是否成功"><a href="#验证安装是否成功" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h3><p>按住键盘上的“Win徽标键”，再按“R”<br>再弹出的窗口中输入“cmd”，再回车<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.12.png"></p>
<p>在弹出的黑框框中分别输入“node -v”加回车和“npm -v”加回车<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.13.png"><br>如果能像我一样，得到版本号，那么就安装成功了<br>（失败请重复上述操作）</p>
<p>再回到桌面</p>
<p>鼠标右键按一下<br>如果像我一样，有“Git Bush Here”这个选项<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.14.jpg"></p>
<p>那么恭喜您<br>准备就完成了！！！<br>接下来，就等博主写下一篇有关hexo博客搭建的文章吧</p>
<p>感谢您的阅读！！！<br>（如有错请联系博主：<a href="mailto:&#120;&#x79;&#x73;&#x77;&#121;&#121;&#x31;&#64;&#x31;&#54;&#51;&#x2e;&#99;&#111;&#x6d;">&#120;&#x79;&#x73;&#x77;&#121;&#121;&#x31;&#64;&#x31;&#54;&#51;&#x2e;&#99;&#111;&#x6d;</a>或在评论区留言）</p>
<center>---------END--------</center>

]]></content>
      <categories>
        <category>hexo搭建博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>解决浏览器因为时钟快了无法显示网页的问题</title>
    <url>/posts/2290789902/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>咳咳咳，就是想解决一些同志因为时钟快了无法显示网页的问题。<br>话不多说，开始吧！</p>
<hr>
<span id="more"></span>

<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="方案一，使用cmd-time命令"><a href="#方案一，使用cmd-time命令" class="headerlink" title="方案一，使用cmd time命令"></a>方案一，使用cmd time命令</h3><p>首先同时按住win键+r键，打开“运行”</p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.12.png"></p>
<p>然后输入cmd<br>再回车</p>
<p>好，弹出了一个黑框框</p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/14.1.png"></p>
<p>然后查看当前时间，输入</p>
<pre><code>time /t
</code></pre>
<p>再换行<br>结果应该是系统现在的时间</p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/14.2.png"></p>
<p>如果和当时时间不符的话……<br>嘿嘿</p>
<p>再输入</p>
<pre><code>time 当前时间
</code></pre>
<p>再换行<br>举个例子<br>比如说我现在是11点11分11秒<br>就输入</p>
<pre><code>time 11:11:11
</code></pre>
<p>再换行</p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/14.3.png"></p>
<p>好了，现在试试，（浏览器）应该可以用了</p>
]]></content>
      <tags>
        <tag>浏览器</tag>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>谢言射教你用hexo+github搭建博客（2.本地搭建和github部署）</title>
    <url>/posts/3031762228/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基于<a href="https://xys-blog.cf/posts/4293843122/">第一章的准备工作</a>，现在开始搭建+部署博客</p>
<span id="more"></span>

<h2 id="本地搭建"><a href="#本地搭建" class="headerlink" title="本地搭建"></a>本地搭建</h2><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>在桌面右键，在弹出来的窗口中单击“Git Bush Here”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.14.jpg"></p>
<p>在弹出来的窗口中输入要创建博客的地址<br>比如我的要搭建在F盘<br>那么我就输入</p>
<pre><code>cd /f/
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.2.png"><br>如图，成功跳到了F盘</p>
<p>然后在git窗口中输入</p>
<pre><code>npm install hexo-cli -g
</code></pre>
<p>结果如图（差不多即可）<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.3.png"></p>
<p>再输入</p>
<pre><code>hexo init myblog
</code></pre>
<p>速度有点慢，需要稍等一会<br>结果如图（差不多即可）（以下省略）<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.4.png"></p>
<p>同时，你的（D，E，F……）盘下会出现应该叫“myblog”的文件夹<br>欧克，用git打开myblog这个文件夹</p>
<pre><code>cd myblog
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.5.png"></p>
<p>接着在git运行</p>
<pre><code>hexo s
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.6.png"></p>
<p>然后在浏览器中打开<a href="http://localhost:4000/">http://localhost:4000/</a><br>就能看见自己在本地搭建好的博客了<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.7.png"></p>
<p>这里附上hexo在git的常用命令</p>
<pre><code>hexo new“postName” #新建文章
hexo new page“pageName&quot; #新建页面
hexo generate #生成静态页面至public目录
hexo sprver #开启预览访问端口(默认端口4000,&#39;ctrl +c&#39;关闭server)
hexo deploy #部署
hexo help #查看帮助
hexo version #查看Hexo的版本
</code></pre>
<p>以及命令的缩写</p>
<pre><code>hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
</code></pre>
<p>和组合命令</p>
<pre><code>hexo s -g #生成并本地预览
hexo d-g #生成并上传
</code></pre>
<p>好，然后在git窗口按ctrl+c结束预览</p>
<p>如果你做到了这一步，那么恭喜你，你的博客在本地搭建成功了</p>
<p>接下来我们开始部署到github</p>
<h3 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h3><p>什么是github？</p>
<blockquote>
<p>GitHub是一个面向开源及私有软件项目的托管平台，因为只支持Git作为唯一的版本库格式进行托管，故名GitHub。2022年4月13日起，GitHub 开始封锁受美国制裁公司的俄罗斯开发者账户。      ——–百度百科</p>
</blockquote>
<p>好了好了，不装了，开始</p>
<p>首先，我们要在github创建一个账号<br>github官网：<a href="https://github.com/">https://github.com/</a><br>额，但访问速度较慢的同学可以访问这个网址：<a href="http://webtrans.yodao.com/webTransPc/index.html?from=auto&amp;to=auto&amp;type=1&amp;url=https://github.com/#/">http://webtrans.yodao.com/webTransPc/index.html?from=auto&amp;to=auto&amp;type=1&amp;url=https://github.com/#/</a></p>
<p>点红框里的按钮（”Sign up”）注册<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.8.png"></p>
<p>然后输入你的邮箱，点continue<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.9.png"></p>
<p>设置一个密码，然后点continue<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.10.png"></p>
<p>再设置一个用户名，再点continue<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.11.png"></p>
<p>接下来如果想通过电子邮件接收github的产品更新和公告，就输入“y”，否则输入“n”<br>我选择“n”，再按“continue”<br>好，接下来按他的提示完成人类验证，就完成了<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.12.png"></p>
<p>接着它会发验证码到你的邮箱<br>在网页上输入验证码确认即可。<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.13.png"></p>
<p>然后它会统计一下你的信息，随便填一下就好<br>注：选套餐时最好选择“free”（免费）这个选项，不然会很麻烦</p>
<p>啊，终于注册好了<br>接着来创建一个仓库<br>先点红色框（界面右上角）的“+”<br>再点“New repository”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.14.png"></p>
<p>就会自动条到一个界面<br>在这个界面中的“Repository name”（项目名）中填</p>
<pre><code>你的github用户名.github.io
</code></pre>
<p>例如我的</p>
<pre><code>teacherseth.github.io
</code></pre>
<p>“Description”（描述）这一栏中随便填一下即可<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.15.png"></p>
<p>接着划到底部<br>点那个绿色的按钮（“Create repository”）<br>完成创建<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.16.png"></p>
<p>接着看图<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.17.png"></p>
<p>OK，用vscode打开hexo博客根目录的_config.yml文件<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.18.png"></p>
<p>划到最后面<br>修改“deploy”这一项<br>把</p>
<pre><code>deploy:
type: &#39;&#39;
</code></pre>
<p>改成</p>
<pre><code>deploy:
type: git
repo: 刚才复制的ssh代码
branch: main
</code></pre>
<p>比如我的</p>
<pre><code>deploy:
type: git
repo: git@github.com:teacherxys/teacherxys.github.io.git
branch: main
</code></pre>
<p>然后打开git<br>输入</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre>
<p>回车<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.19.png"></p>
<p>完成后打开 <a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 这个网址<br>在git输入</p>
<pre><code>cd ~/.ssh/
rm -rf *
ssh-keygen
</code></pre>
<p>和四个回车<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.20.png"></p>
<p>然后输入</p>
<pre><code>cat id_rsa.pub
</code></pre>
<p>接着把它输出的东西复制下来<br>在浏览器中点击“New ssh key”<br>创建一个ssh秘钥<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.21.png"></p>
<p>Title中随便填<br>key中填刚刚复制的东西<br>然后点“Add SSH key”创建<br>好<br>在git中输入</p>
<pre><code>cd 博客地址
hexo d
</code></pre>
<p>例如</p>
<pre><code>cd /f/myblog
hexo d
</code></pre>
<p>回车<br>稍等一会<br>再输入</p>
<pre><code>yes
</code></pre>
<p>回车<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.22.png"></p>
<p>欧克，在浏览器中输入</p>
<pre><code>你的github用户名.github.io
</code></pre>
<p>比如我的</p>
<pre><code>teachxys.github.io
</code></pre>
<p>如果出现了这样<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.23.png"></p>
<p>那么恭喜你，博客搭建成功了！！！<br>撒花！！！<br>以后就能通过  你的github用户名.github.io  来访问你的博客了！！！</p>
<p>接下来，就等博主写下一篇有关hexo博客搭建的文章吧</p>
<p>感谢您的阅读！！！<br>（如有错请联系博主：<a href="mailto:&#x78;&#121;&#115;&#119;&#x79;&#121;&#49;&#64;&#49;&#54;&#51;&#46;&#99;&#111;&#109;">&#x78;&#121;&#115;&#119;&#x79;&#121;&#49;&#64;&#49;&#54;&#51;&#46;&#99;&#111;&#109;</a>或在评论区留言）</p>
<center>---------END--------</center>






]]></content>
      <categories>
        <category>hexo搭建博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>4893 - 圆桌问题题解</title>
    <url>/posts/323266332/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="4893-圆桌问题"><a href="#4893-圆桌问题" class="headerlink" title="4893 - 圆桌问题"></a>4893 - 圆桌问题</h3><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><span id="more"></span>

<p>圆桌上围坐着2n个人。其中n个人是好人，另外n个人是坏人。如果从第一个人开始数数，数到第m个人，则立即处死该人；然后从被处死的人之后开始数数，再将数到的第m个人处死……依此方法不断处死围坐在圆桌上的人。试问预先应如何安排这些好人与坏人的座位，能使得在处死n个人之后，圆桌上围坐的剩余的n个人全是好人。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>多组数据，每组数据输入：好人和坏人的人数n（&lt;&#x3D;32767）、步长m（&lt;&#x3D;32767）；</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>对于每一组数据，输出2n个大写字母，‘G’表示好人，‘B’表示坏人，50个字母为一行，不允许出现空白字符。相邻数据间留有一空行。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入</p>
<pre><code>2 3
2 4
</code></pre>
<p>输出</p>
<pre><code>GBBG

BGGB
</code></pre>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    1 秒<br>    内存限制    128 MB<br>    来源        FYOJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>就是模拟+vector</p>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
int T_T;
int n,m;
vector&lt;int&gt; v;
int main()&#123;
    //freopen(&quot;.in&quot;,&quot;r&quot;,stdin);
    //freopen(&quot;.out&quot;,&quot;w&quot;,stdout);
    while (cin &gt;&gt; n &gt;&gt; m)&#123;
        for (int i = 0; i &lt; 2*n; i++)&#123;
            v.push_back(i);
        &#125;
        int sum = 0;
        for (int i = 0; i &lt; n; i++)&#123;
            sum = (sum+m-1)%v.size();
            v.erase(v.begin()+sum); 
        &#125;
        int len = 0;
        for (int i = 0; i &lt; 2*n; i++)&#123;
            if ((i%50) == 0 &amp;&amp; i != 0)&#123;
                cout &lt;&lt; endl;
            &#125;
            if (len &lt; v.size() &amp;&amp; i == v[len])&#123;
                len++;
                cout &lt;&lt; &quot;G&quot;;
            &#125; else &#123;
                cout &lt;&lt; &quot;B&quot;;
            &#125;
        &#125;
        cout &lt;&lt; endl &lt;&lt; endl;
        v.clear();
    &#125;
    return 0;
&#125;
</code></pre>
<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    时间        22 MS<br>    内存        940 KB<br>    语言        C++<br>    代码长度    630</p>
</blockquote>
]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>4894 - 机器人走路题解</title>
    <url>/posts/1031250688/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="4894-机器人走路"><a href="#4894-机器人走路" class="headerlink" title="4894 - 机器人走路"></a>4894 - 机器人走路</h3><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><span id="more"></span>

<p>这是一个简单的生存游戏，你控制一个机器人从一个棋盘的起始点(1,1)走到棋盘的终点(n,m)。游戏的规则描述如下：<br>1.机器人一开始在棋盘的起始点并有起始点所标有的能量。<br>2.机器人只能向右或者向下走，并且每走一步消耗一单位能量。<br>3.机器人不能在原地停留。<br>4.当机器人选择了一条可行路径后，当他走到这条路径的终点时，他将只有终点所标记的能量。</p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/20210818175000_72419.gif"></p>
<p>如上图，机器人一开始在(1,1)点，并拥有4单位能量，蓝色方块表示他所能到达的点，如果他在这次路径选择中选择的终点是(2,4)点，当他到达(2,4)点时将拥有1单位的能量，并开始下一次路径选择，直到到达(6,6)点。<br>我们的问题是机器人有多少种方式从起点走到终点。这可能是一个很大的数，输出的结果对10000取模。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>第一行输入两个整数n,m(1 &lt;&#x3D; n,m &lt;&#x3D; 100)。表示棋盘的大小。接下来输入n行,每行m个整数e(0 &lt;&#x3D; e &lt; 20)。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>对于每一组数据输出方式总数对10000取模的结果.</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入</p>
<pre><code>6 6
4 5 6 6 4 3
2 2 3 1 7 2
1 1 4 6 2 7
5 8 4 3 9 5
7 6 6 2 1 5
3 1 1 3 7 2
</code></pre>
<p>输出</p>
<pre><code>3948
</code></pre>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    1 秒<br>    内存限制    128 MB<br>    来源        FYOJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>咳咳咳，进入题解部分</p>
<h3 id="老师的做法"><a href="#老师的做法" class="headerlink" title="老师的做法"></a>老师的做法</h3><p>额……<br>老师直接暴力<br><del>骗分过样例，暴力出奇迹！</del><br>接着直接看他的代码吧</p>
<pre><code>#include &lt;cstdio&gt;
using namespace std;
int a[111][111],f[111][111];
int main()
&#123;
    int n,m;
    scanf(&quot;%d%d&quot;,&amp;n,&amp;m);
    for(int i\=1; i&lt;=n; ++i)    
        for(int j=1; j&lt;=m; ++j)
            scanf(&quot;%d&quot;,&amp;a[i][j]);
    //确定一个起点，确定一个终点
    //去验证这个起点-&gt;这个终点的可行性
    //a[i][j]-&gt;a[x][y]怎么去验证（i,j）-&gt;（×,y）
    //是不是只要保证a[i][j]能不能够提供我i,j---&gt;x,y
    //重点：（i,j）---&gt;（x,y）的距离为 x+y-i-j 
    f[1][1]=1;
    for(int x=1; x&lt;=n; ++x)
        for(int y=1; y&lt;=m; ++y) //x,y终点
            for(int i=1; i&lt;=x; ++i)
                for(int j=1; j&lt;=y; ++j) //i,j起点 
                &#123;
                    if(i==x &amp;&amp; j==y) continue;
                    if(x+y-i-j&lt;=a[i][j]) f[x][y]=(f[x][y]+f[i][j])%10000;
                &#125;                        
    printf(&quot;%d&quot;,f[n][m]);
    return 0;    
&#125;
</code></pre>
<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    时间        52 MS<br>    内存        668 KB<br>    语言        C++<br>    代码长度    475</p>
</blockquote>
<h3 id="我的做法"><a href="#我的做法" class="headerlink" title="我的做法"></a>我的做法</h3><p>鹅妈妈……就记忆化搜索</p>
<pre><code>#include &lt;bits/stdc++.h&gt;
using namespace std;
int n,m;
int a[110][110];
int b[110][110];
int dfs(int x,int y)&#123;
    if (b[x][y] &gt;= 0)&#123;
        return b[x][y];
    &#125;
    b[x][y] = 0;
    for (int i = 0; i &lt;= a[x][y]; i++)&#123;
        for (int j = 0; j &lt;= a[x][y]-i; j++)&#123;
            int X = x+i,Y = y+j;
            if (X &gt;= 1 &amp;&amp; X &lt;= n &amp;&amp; Y &gt;= 1 &amp;&amp; Y &lt;= m)&#123;
                int kkksc03 = dfs(X,Y);  
                b[x][y] = (b[x][y]+kkksc03)%10000;  
            &#125;
        &#125;
    &#125;
    return b[x][y];
&#125;
int main()&#123;
    //freopen(&quot;.in&quot;,&quot;r&quot;,stdin);
    //freopen(&quot;.out&quot;,&quot;w&quot;,stdout);
    cin &gt;&gt; n &gt;&gt; m;
    for (int i = 1; i &lt;= n; i++)&#123;
        for (int j = 1; j &lt;= m; j++)&#123;
            cin &gt;&gt; a[i][j];
        &#125;
    &#125;
    memset(b,-1,sizeof(b));
    b[n][m] = 1;
    int chen_zhe = dfs(1,1);
    cout &lt;&lt; chen_zhe;
    return 0;
&#125;
</code></pre>
<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    时间        7 MS<br>    内存        816 KB<br>    语言        C++<br>    代码长度    732    </p>
</blockquote>
]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>谢言射教你用hexo+github搭建博客（3.主题更换）</title>
    <url>/posts/3200579984/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基于<a href="https://xys-blog.cf/posts/3031762228/">第二章的准备工作</a>，现在更换博客主题</p>
<span id="more"></span>

<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>当然，您可以保留hexo的默认主题，也可以跟着本教程更换</p>
<h3 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h3><p>到 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 中选择一款您喜欢的主题，并点击它的名字进入它的github地址<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.1.png"></p>
<h3 id="更换主题-1"><a href="#更换主题-1" class="headerlink" title="更换主题"></a>更换主题</h3><p>这里以butterfly主题为例<br>划到自述文件的开头<br>然后复制红框中的代码<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.2.png"></p>
<p>在git中先打开博客（cd &#x2F;f&#x2F;myblog），然后把刚刚复制的东西黏贴到git中运行<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.3.png"></p>
<p>注：butterfly等主题还需在git中运行</p>
<p>  npm install hexo-renderer-pug hexo-renderer-stylus<br>才行<br>接着更改博客根目录的_config.yml文件<br>把大约为第100行的theme配置改为</p>
<p>  theme: 您刚刚更改的主题的名称<br>比如我的</p>
<p>  theme: butterfly<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.4.png"></p>
<p>再在git中运行</p>
<p>  hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br>即可<br>等待一会，在浏览器中打开自己的博客，就能看见变化了<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.5.png"></p>
<p>博主有关hexo博客搭建的文章已经写完了<br>但后续会推出hexo博客美化系列的文章<br>敬请期待……</p>
<p>感谢您的阅读！！！<br>（如有错请联系博主：<a href="mailto:&#120;&#x79;&#115;&#x77;&#121;&#121;&#x31;&#x40;&#49;&#54;&#51;&#x2e;&#x63;&#111;&#109;">&#120;&#x79;&#115;&#x77;&#121;&#121;&#x31;&#x40;&#49;&#54;&#51;&#x2e;&#x63;&#111;&#109;</a>或在评论区留言）</p>
<center>---------END--------</center>]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>谢言射教你用hexo+github搭建博客（简约版）</title>
    <url>/posts/3893026529/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h2 id="或许有人会问，为什么是用github而不用coding和gitee呢？因为coding已经改版，貌似不支持静态页面了，gitee使用又很麻烦（要充钱），还要实名认证，最后还是选了github。"><a href="#或许有人会问，为什么是用github而不用coding和gitee呢？因为coding已经改版，貌似不支持静态页面了，gitee使用又很麻烦（要充钱），还要实名认证，最后还是选了github。" class="headerlink" title="或许有人会问，为什么是用github而不用coding和gitee呢？因为coding已经改版，貌似不支持静态页面了，gitee使用又很麻烦（要充钱），还要实名认证，最后还是选了github。"></a>或许有人会问，为什么是用github而不用coding和gitee呢？因为coding已经改版，貌似不支持静态页面了，gitee使用又很麻烦（要充钱），还要实名认证，最后还是选了github。</h2><span id="more"></span>

<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h3><p>下载地址：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.2.png"><br>如果您是Win系统，64位的，请选择画红框的部分。</p>
<p>双击打开文件。<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.3.png"></p>
<p>安装我这里也不多说了，一路默认就行。</p>
<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p>
<p>如果您是Win系统，64位的，请选择“Download for Windows”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.4.png"></p>
<p>下载好双击打卡文件，即可开始安装。<br>安装我这里也不多说了，一路默认就行。</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>这里配置一下环境变量<br>“开始”里面打卡“设置”<br>![](<a href="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.6">https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.6</a> (2).png)</p>
<p>搜索“环境变量”<br>点击“编辑系统环境变量”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.7.png"></p>
<p>在弹出来的窗口中点击“环境变量”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.8.png"></p>
<p>在“系统变量”中找到“Path”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.9.png"></p>
<p>双击“Path”</p>
<p>在弹出来的窗口中的<strong>空白部分</strong>增加Nodejs的下载地址<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.10.png"></p>
<p>比如我下在D盘，位置就是D盘的<br>注意！！！！<br>是文件夹的位置！！<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.11.png" alt="这个文件夹的地址！！！"></p>
<p>完成后按“确定”<br><strong>（三个窗口都按确定）</strong>即可</p>
<h3 id="验证安装是否成功"><a href="#验证安装是否成功" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h3><p>按住键盘上的“Win徽标键”，再按“R”<br>再弹出的窗口中输入“cmd”，再回车<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.12.png"></p>
<p>在弹出的黑框框中分别输入“node -v”加回车和“npm -v”加回车<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.13.png"><br>如果能像我一样，得到版本号，那么就安装成功了<br>（失败请重复上述操作）</p>
<p>再回到桌面</p>
<p>鼠标右键按一下<br>如果像我一样，有“Git Bush Here”这个选项<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.14.jpg"></p>
<p>那么恭喜您<br>准备就完成了！！！</p>
<h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>在桌面右键，在弹出来的窗口中单击“Git Bush Here”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/1.14.jpg"></p>
<p>在弹出来的窗口中输入要创建博客的地址<br>比如我的要搭建在F盘<br>那么我就输入</p>
<pre><code>cd /f/
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.2.png"><br>如图，成功跳到了F盘</p>
<p>然后在git窗口中输入</p>
<pre><code>npm install hexo-cli -g
</code></pre>
<p>结果如图（差不多即可）<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.3.png"></p>
<p>再输入</p>
<pre><code>hexo init myblog
</code></pre>
<p>速度有点慢，需要稍等一会<br>结果如图（差不多即可）（以下省略）<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.4.png"></p>
<p>同时，你的（D，E，F……）盘下会出现应该叫“myblog”的文件夹<br>欧克，用git打开myblog这个文件夹</p>
<pre><code>cd myblog
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.5.png"></p>
<p>接着在git运行</p>
<pre><code>hexo s
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.6.png"></p>
<p>然后在浏览器中打开<a href="http://localhost:4000/">http://localhost:4000/</a><br>就能看见自己在本地搭建好的博客了<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.7.png"></p>
<p>这里附上hexo在git的常用命令</p>
<pre><code>hexo new“postName” #新建文章
hexo new page“pageName&quot; #新建页面
hexo generate #生成静态页面至public目录
hexo sprver #开启预览访问端口(默认端口4000,&#39;ctrl +c&#39;关闭server)
hexo deploy #部署
hexo help #查看帮助
hexo version #查看Hexo的版本
</code></pre>
<p>以及命令的缩写</p>
<pre><code>hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
</code></pre>
<p>和组合命令</p>
<pre><code>hexo s -g #生成并本地预览
hexo d-g #生成并上传
</code></pre>
<p>好，然后在git窗口按ctrl+c结束预览</p>
<p>如果你做到了这一步，那么恭喜你，你的博客在本地搭建成功了</p>
<p>接下来我们开始部署到github</p>
<h3 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h3><p>什么是github？</p>
<blockquote>
<p>GitHub是一个面向开源及私有软件项目的托管平台，因为只支持Git作为唯一的版本库格式进行托管，故名GitHub。2022年4月13日起，GitHub 开始封锁受美国制裁公司的俄罗斯开发者账户。      ——–百度百科</p>
</blockquote>
<p>好了好了，不装了，开始</p>
<p>首先，我们要在github创建一个账号<br>github官网：<a href="https://github.com/">https://github.com/</a><br>额，但访问速度较慢的同学可以访问这个网址：<a href="http://webtrans.yodao.com/webTransPc/index.html?from=auto&amp;to=auto&amp;type=1&amp;url=https://github.com/#/">http://webtrans.yodao.com/webTransPc/index.html?from=auto&amp;to=auto&amp;type=1&amp;url=https://github.com/#/</a></p>
<p>点红框里的按钮（”Sign up”）注册<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.8.png"></p>
<p>然后输入你的邮箱，点continue<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.9.png"></p>
<p>设置一个密码，然后点continue<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.10.png"></p>
<p>再设置一个用户名，再点continue<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.11.png"></p>
<p>接下来如果想通过电子邮件接收github的产品更新和公告，就输入“y”，否则输入“n”<br>我选择“n”，再按“continue”<br>好，接下来按他的提示完成人类验证，就完成了<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.12.png"></p>
<p>接着它会发验证码到你的邮箱<br>在网页上输入验证码确认即可。<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.13.png"></p>
<p>然后它会统计一下你的信息，随便填一下就好<br>注：选套餐时最好选择“free”（免费）这个选项，不然会很麻烦</p>
<p>啊，终于注册好了<br>接着来创建一个仓库<br>先点红色框（界面右上角）的“+”<br>再点“New repository”<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.14.png"></p>
<p>就会自动条到一个界面<br>在这个界面中的“Repository name”（项目名）中填</p>
<pre><code>你的github用户名.github.io
</code></pre>
<p>例如我的</p>
<pre><code>teacherseth.github.io
</code></pre>
<p>“Description”（描述）这一栏中随便填一下即可<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.15.png"></p>
<p>接着划到底部<br>点那个绿色的按钮（“Create repository”）<br>完成创建<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.16.png"></p>
<p>接着看图<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.17.png"></p>
<p>OK，用vscode打开hexo博客根目录的_config.yml文件<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.18.png"></p>
<p>划到最后面<br>修改“deploy”这一项<br>把</p>
<pre><code>deploy:
type: &#39;&#39;
</code></pre>
<p>改成</p>
<pre><code>deploy:
type: git
repo: 刚才复制的ssh代码
branch: main
</code></pre>
<p>比如我的</p>
<pre><code>deploy:
type: git
repo: git@github.com:teacherxys/teacherxys.github.io.git
branch: main
</code></pre>
<p>然后打开git<br>输入</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre>
<p>回车<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.19.png"></p>
<p>完成后打开 <a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 这个网址<br>在git输入</p>
<pre><code>cd ~/.ssh/
rm -rf *
ssh-keygen
</code></pre>
<p>和四个回车<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.20.png"></p>
<p>然后输入</p>
<pre><code>cat id_rsa.pub
</code></pre>
<p>接着把它输出的东西复制下来<br>在浏览器中点击“New ssh key”<br>创建一个ssh秘钥<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.21.png"></p>
<p>Title中随便填<br>key中填刚刚复制的东西<br>然后点“Add SSH key”创建<br>好<br>在git中输入</p>
<pre><code>cd 博客地址
hexo d
</code></pre>
<p>例如</p>
<pre><code>cd /f/myblog
hexo d
</code></pre>
<p>回车<br>稍等一会<br>再输入</p>
<pre><code>yes
</code></pre>
<p>回车<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.22.png"></p>
<p>欧克，在浏览器中输入</p>
<pre><code>你的github用户名.github.io
</code></pre>
<p>比如我的</p>
<pre><code>teachxys.github.io
</code></pre>
<p>如果出现了这样<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/2.23.png"></p>
<p>那么恭喜你，博客搭建成功了！！！<br>撒花！！！<br>以后就能通过  你的github用户名.github.io  来访问你的博客了！！！</p>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>当然，您可以保留hexo的默认主题，也可以跟着本教程更换</p>
<h3 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h3><p>到 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 中选择一款您喜欢的主题，并点击它的名字进入它的github地址<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.1.png"></p>
<h3 id="更换主题-1"><a href="#更换主题-1" class="headerlink" title="更换主题"></a>更换主题</h3><p>这里以butterfly主题为例<br>划到自述文件的开头<br>然后复制红框中的代码<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.2.png"></p>
<p>在git中先打开博客（cd &#x2F;f&#x2F;myblog），然后把刚刚复制的东西黏贴到git中运行<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.3.png"></p>
<p>注：butterfly等主题还需在git中运行</p>
<p>  npm install hexo-renderer-pug hexo-renderer-stylus<br>才行<br>接着更改博客根目录的_config.yml文件<br>把大约为第100行的theme配置改为</p>
<p>  theme: 您刚刚更改的主题的名称<br>比如我的</p>
<p>  theme: butterfly<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.4.png"></p>
<p>再在git中运行</p>
<p>  hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br>即可<br>等待一会，在浏览器中打开自己的博客，就能看见变化了<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/3.5.png"></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>博主有关hexo博客搭建的文章已经写完了<br>但后续会推出hexo博客美化系列的文章<br>敬请期待……</p>
<p>感谢您的阅读！！！<br>（如有错请联系博主：<a href="mailto:&#x78;&#121;&#x73;&#119;&#121;&#x79;&#x31;&#x40;&#x31;&#54;&#51;&#x2e;&#x63;&#111;&#x6d;">&#x78;&#121;&#x73;&#119;&#121;&#x79;&#x31;&#x40;&#x31;&#54;&#51;&#x2e;&#x63;&#111;&#x6d;</a>或在评论区留言）</p>
<center>---------END--------</center>]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>世界杯(worldcup)题解</title>
    <url>/posts/751019721/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="世界杯-worldcup"><a href="#世界杯-worldcup" class="headerlink" title="世界杯(worldcup)"></a>世界杯(worldcup)</h3><span id="more"></span>

<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>3014年世界杯足球赛就要开始了！作为卫冕冠军中国足球队的教练，手下每位球员都是猛将，如何摆出最强的11人阵容也是一件幸福的烦恼事啊。<br>众所周知，足球阵容里的11个球员都会被分配到场上某一个特别的位置，而这些位置主要分为守门员、后卫、中场和前锋四种，其中守门员有且只有一个，后卫、中场和前锋的人数取决于你安排的足球阵型。形容足球阵型的方法由后卫开始计算至前锋，但不把守门员计算在内。例如，3-5-2阵型是指有三个后卫、五个中场及两名前锋。由于竞争激烈，每位球员只会培养其中一种位置所需要的技能，所以他们每个人都只能胜任四个位置中的其中一种。<br>作为一个对球员能力了如指掌的教练，你给每个球员的综合水平进行量化。为了将阵型安排得更好，你的教练团队决定使用以下策略安排球员：首先按照顺序提出Q个阵型，分别代表第一阵型、第二阵型、……、第Q阵型。然后对于每个阵型，从仍未选择的球员中选择最好的对应数量的守门员、后卫、中场和前锋。比如说，对于第一阵型，在所有球员中选择；对于第二阵型，在除了第一阵型外的所有球员中选择；对于第三阵型，在除了第一阵型和第二阵型外的所有球员中选择；以此类推。<br>现在Q个阵型都已经确定，而你需要知道的，是每个阵型的平均综合水平分别是多少。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>第一行有四个整数K, D, M, F，分别表示守门员、后卫、中场和前锋供挑选的球员人数。<br>第二行有K个整数k_i，分别表示每个守门员的综合水平值。<br>第三行有D个整数d_i，分别表示每个后卫的综合水平值。<br>第四行有M个整数m_i，分别表示每个中场的综合水平值。<br>第五行有F个整数f_i，分别表示每个前锋的综合水平值。<br>第六行有一个整数Q，表示教练团队提出的阵型个数。<br>以下Q行，第i行三个整数A_i, B_i, C_i，由空格间隔，表示第i阵型是A_i - B_i - C_i阵型。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出Q行。对于第i种阵型，输出一个实数，表示该阵型平均综合水平的最大值，并四舍五入到小数点后2位。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入</p>
<pre><code>3 10 12 4
76 60 87
78 84 84 84 81 82 72 51 77 57
85 84 62 87 88 64 81 90 80 66 88 85
65 83 63 79
2
4 5 1
4 4 2
</code></pre>
<p>输出</p>
<pre><code>85.64
78.00
</code></pre>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>对于30%数据，K, D, M, F≤1000，Q≤10；<br>对于100%数据，1≤K, D, M, F≤10^5，0≤k_i, d_i, m_i, f_i≤10^8，1≤Q≤K，0≤A_i, B_i, C_i≤10，A_i+B_i+C_i&#x3D;10，∑A_i≤D，∑B_i≤M，∑C_i≤F。</p>
<blockquote>
<p>  时间限制: 1.000 Sec<br>    内存限制: 128 MB<br>    来源：Luo’s OJ &amp;&amp; 洛谷</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h4 id="这题用优先队列！！！"><a href="#这题用优先队列！！！" class="headerlink" title="这题用优先队列！！！"></a>这题用优先队列！！！</h4><p><del>优先队列是队列</del>，先要包含头文件#include <queue>, 它和queue不同的就在于我们可以自定义其中数据的优先级, 让优先级高的排在队列前面,优先出队</p>
<p>优先队列具有队列的所有特性，包括基本操作，只是在这基础上添加了内部的一个排序，它本质是一个堆实现的</p>
<p>接下来看code吧~</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n1,n2,n3,n4,T;</span><br><span class="line">priority_queue &lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,less&lt;<span class="type">int</span>&gt; &gt;q1,q2,q3,q4; <span class="comment">//定义优先队列 </span></span><br><span class="line"><span class="comment">//降序队列</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;n1,&amp;n2,&amp;n3,&amp;n4); <span class="comment">//输入 </span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n1; i++) &#123;</span><br><span class="line">		<span class="type">int</span> a;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">		q1.<span class="built_in">push</span>(a); <span class="comment">//入队 </span></span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n2; i++) &#123; <span class="comment">//这些都是第一个循环复制下来，微调的 </span></span><br><span class="line">		<span class="type">int</span> a;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">		q2.<span class="built_in">push</span>(a);</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n3; i++) &#123;</span><br><span class="line">		<span class="type">int</span> a;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">		q3.<span class="built_in">push</span>(a);</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n4; i++) &#123;</span><br><span class="line">		<span class="type">int</span> a;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">		q4.<span class="built_in">push</span>(a);</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span> (T--)&#123; <span class="comment">//同样，按题意模拟即可 </span></span><br><span class="line">		<span class="type">int</span> a,b,c;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">		<span class="type">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">		sum += q1.<span class="built_in">top</span>();</span><br><span class="line">		q1.<span class="built_in">pop</span>();</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= a; i++)&#123;</span><br><span class="line">			sum += q2.<span class="built_in">top</span>(); <span class="comment">//读取元素 </span></span><br><span class="line">			q2.<span class="built_in">pop</span>(); <span class="comment">//弹出 </span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= b; i++)&#123; <span class="comment">//复制黏贴 </span></span><br><span class="line">			sum += q3.<span class="built_in">top</span>();</span><br><span class="line">			q3.<span class="built_in">pop</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= c; i++)&#123;</span><br><span class="line">			sum += q4.<span class="built_in">top</span>();</span><br><span class="line">			q4.<span class="built_in">pop</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>,(sum/<span class="number">11</span>)); <span class="comment">//最后输出即可 </span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>  测评结果    正确<br>    内存(KB)    4444KB<br>    耗时(MS)    349ms<br>    语言        C++<br>    代码长度    909 bytes</p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>Bear and Finding Criminals题解</title>
    <url>/posts/2949852796/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="Bear-and-Finding-Criminals"><a href="#Bear-and-Finding-Criminals" class="headerlink" title="Bear and Finding Criminals"></a>Bear and Finding Criminals</h3><span id="more"></span>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>熊岛有n个城市，编号为1到n。城市被排列成一长排。城市i和j之间的距离等于|i-j|。</p>
<p>利马克是一名警察。他住在一个城市a，他的工作是抓捕罪犯。这很难，因为他不知道犯罪分子在哪个城市。不过，他知道每个城市最多只有一个罪犯。</p>
<p>利马克将使用BCD（熊犯罪探测器）。BCD会告诉Limak，从一个城市a开始，每隔一段距离就有多少个罪犯。</p>
<p>你知道在哪些城市有罪犯。在利马克使用BCD后，计算他能抓到的罪犯的数量。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入的第一行包含两个整数n和a（1≤a≤n≤100）–城市的数量和Limak居住的城市的索引。<br>第二行包含n个整数t1,t2,…,tn（0≤ti≤1）。在第i个城市有ti个罪犯。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>打印Limak将抓到的罪犯的数量。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入1</p>
<pre><code>6 3
1 1 1 0 1 0
</code></pre>
<p>输出1</p>
<pre><code>3
</code></pre>
<p>输入2</p>
<pre><code>5 2
0 0 0 1 0
</code></pre>
<p>输出2</p>
<pre><code>1
</code></pre>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>在第一个样本中，有六个城市，利马克住在第三个城市（下面的蓝色箭头）。罪犯在标有红色的城市里。<br>使用BCD给Limak提供了以下信息。</p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/16516346483990.png"></p>
<p>1.在离第三个城市的距离0处有一个罪犯–利马克确信这个罪犯正好在第三个城市。<br>2.在离第三城市的距离1处有一个罪犯–利马克不知道这个罪犯是在第二还是第四城市。<br>3.在离第三座城市的距离为2的地方有两个罪犯–利马克肯定有一个罪犯在第一座城市，一个在第五座城市。<br>4.每一个更大的距离都有零个罪犯。<br>因此，利马克将在第1、3和5个城市抓到罪犯，即总共有3个罪犯。 在第二个例子中（如下图），BCD给Limak的信息是，在距离Limak的城市2处有一个罪犯。在距离2的地方只有一个城市，所以Limak确定了一个罪犯的位置。</p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/16516347087641.png"></p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    2 秒<br>    内存限制    256 MB<br>    来源        FYOJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>emmmm……<br><del>模拟好，模拟秒，模拟青蛙呱呱叫</del></p>
<p>咳咳咳，还好，模拟，按题目打即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> s[<span class="number">110</span>];</span><br><span class="line"><span class="type">int</span> n,a;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;	</span><br><span class="line">	cin  &gt;&gt; n &gt;&gt; a;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		cin &gt;&gt; s[i];</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="keyword">if</span> (a &lt;= n/<span class="number">2</span>) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (i &lt; a) &#123;</span><br><span class="line">				<span class="keyword">if</span> (s[i] == <span class="number">1</span> &amp;&amp; s[<span class="number">2</span>*a-i] == <span class="number">1</span>)&#123;</span><br><span class="line">					sum += <span class="number">2</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (i == a) &#123;</span><br><span class="line">				<span class="keyword">if</span> (s[i] == <span class="number">1</span>)&#123;</span><br><span class="line">					sum++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">if</span> (i &gt;= <span class="number">2</span>*a)&#123;</span><br><span class="line">					<span class="keyword">if</span>(s[i] == <span class="number">1</span>)&#123;</span><br><span class="line">						sum++;</span><br><span class="line">					&#125; </span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (i &gt;= <span class="number">2</span>*a-n &amp;&amp; i &lt; a) &#123;</span><br><span class="line">				<span class="keyword">if</span> (s[i] == <span class="number">1</span>&amp;&amp;s[<span class="number">2</span>*a-i] == <span class="number">1</span>)&#123;</span><br><span class="line">					sum+=<span class="number">2</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == a) &#123;</span><br><span class="line">				<span class="keyword">if</span> (s[i] == <span class="number">1</span>)&#123;</span><br><span class="line">					sum++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">if</span> (i &lt; <span class="number">2</span>*a-n)&#123;</span><br><span class="line">					<span class="keyword">if</span>(s[i] == <span class="number">1</span>)&#123;</span><br><span class="line">						sum++;</span><br><span class="line">					&#125; </span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    时间        1 MS<br>    内存        712 KB<br>    语言        C++<br>    代码长度    797        </p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>Bear and Five Cards题解</title>
    <url>/posts/2000011491/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="Bear-and-Five-Cards"><a href="#Bear-and-Five-Cards" class="headerlink" title="Bear and Five Cards"></a>Bear and Five Cards</h3><span id="more"></span>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>一只小熊Limak在玩一个游戏。他有五张牌。每张卡片上都写有一个数字。每个数字都是一个正整数。</p>
<p>利马克可以丢弃（扔掉）一些牌。他的目标是使写在剩余（未丢弃）卡片上的数字之和最小。</p>
<p>他最多可以丢弃一次两个或三个数字相同的牌。当然，如果不可能选择两张或三张数字相同的牌，他也不会弃牌。</p>
<p>给出五个写在卡片上的数字，你能找到剩余卡片上数字的最小和吗？</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入的唯一一行包含五个整数t1、t2、t3、t4和t5（1≤ti≤100）–写在卡片上的数字。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>打印写在剩余卡片上的数字的最小可能的总和。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入1</p>
<pre><code>7 3 7 3 20
</code></pre>
<p>输出1</p>
<pre><code>26
</code></pre>
<p>输入2</p>
<pre><code>7 9 3 1 8
</code></pre>
<p>输出2</p>
<pre><code>28
</code></pre>
<p>输入3</p>
<pre><code>10 10 10 10 10
</code></pre>
<p>输出3</p>
<pre><code>20
</code></pre>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>在第一个例子中，利马克有数字为7、3、7、3和20的牌。利马克可以做以下其中一个。<br>什么都不做，总和将是7+3+7+3+20&#x3D;40。 去掉两张数字为7的牌。剩下的总和将是3+3+20&#x3D;26。<br>移除两张数字为3的牌。剩下的总和是7+7+20&#x3D;34。<br>你被要求最小化总和，所以答案是26。<br>在第二个例子中，不可能找到两张或三张数字相同的牌。因此，利马克什么也没做，总和是7+9+1+3+8&#x3D;28。<br>在第三个例子中，所有的牌都有相同的数字。丢弃任何三张牌都是最佳选择。剩下两个数字的总和是10+10&#x3D;20。</p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    2 秒<br>    内存限制    256 MB<br>    来源        FYOJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><del>水题一道</del><br>呸<br>模拟题一道<br>上code！</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> b[<span class="number">110</span>];</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> top;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">	<span class="comment">//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++)&#123;</span><br><span class="line">		cin &gt;&gt; a;</span><br><span class="line">		b[a]++;</span><br><span class="line">		sum += a;</span><br><span class="line">	&#125;</span><br><span class="line">	top = sum;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">100</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">		ans = top;</span><br><span class="line">		<span class="keyword">if</span> (b[i] &gt;= <span class="number">3</span>)&#123;</span><br><span class="line">			ans -= i*<span class="number">3</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (b[i] == <span class="number">2</span>)&#123;</span><br><span class="line">			ans -= i*<span class="number">2</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		sum = <span class="built_in">min</span>(sum,ans);</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; sum;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    时间        0 MS<br>    内存        704 KB<br>    语言        C++<br>    代码长度    451    </p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>Bear and Colors题解</title>
    <url>/posts/2694878122/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="Bear-and-Colors"><a href="#Bear-and-Colors" class="headerlink" title="Bear and Colors"></a>Bear and Colors</h3><span id="more"></span>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>小熊利马克有n个彩色的球，排列在一长排。球的编号为1到n，从左到右。有n种可能的颜色，也编号为1到n。<br>对于一个固定的球的区间（连续元素的集合），我们可以定义一个主导颜色。这是一种在该区间内出现次数最多的颜色。如果一些颜色之间出现平局，则选择数字（指数）最小的颜色作为主导颜色。<br>这里总共有n*(n+1)&#x2F;2多少个非空的区间。对于每种颜色，你的任务是计算这种颜色占主导地位的区间的数量。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入的第一行包含一个整数n（1≤n≤5000）–球的数量。<br>第二行包含n个整数t1,t2,…,tn（1≤ti≤n），ti是第i个球的颜色。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>打印n个整数。其中第i个应该等于第i个是主色的间隔数。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入</p>
<pre><code>4
1 2 1 2
</code></pre>
<p>输出</p>
<pre><code>7 3 0 0
</code></pre>
<p>输入</p>
<pre><code>3
1 1 1
</code></pre>
<p>输出</p>
<pre><code>6 0 0
</code></pre>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>在第一个样本中，颜色2在三个区间中占优势。<br>一个区间[2,2]包含一个球。这个球的颜色是2，所以它显然是一个主导颜色。<br>一个区间[4,4]包含一个球，颜色还是2。<br>一个区间[2,4]包含两个颜色为2的球和一个颜色为1的球。<br>还有7个区间，颜色1在所有的区间中都是主导色。</p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    2 秒<br>    内存限制    256 MB<br>    来源        FYOJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>数论！数论！数论！！！！</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5010</span>][<span class="number">5010</span>];</span><br><span class="line"><span class="type">int</span> sum[<span class="number">5010</span>];</span><br><span class="line"><span class="type">int</span> chen_zhe[<span class="number">5010</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		cin &gt;&gt; chen_zhe[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="type">int</span> maxn = <span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> kkksc03 = chen_zhe[i] - <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; n; ++j)&#123;</span><br><span class="line">			a[i][chen_zhe[j] - <span class="number">1</span>]++;</span><br><span class="line">			<span class="keyword">if</span> (a[i][chen_zhe[j] - <span class="number">1</span>] &gt; maxn) &#123;</span><br><span class="line">				maxn = a[i][chen_zhe[j] - <span class="number">1</span>];</span><br><span class="line">				kkksc03 = chen_zhe[j] - <span class="number">1</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i][chen_zhe[j] - <span class="number">1</span>] == maxn) &#123;</span><br><span class="line">				<span class="keyword">if</span> (chen_zhe[j] - <span class="number">1</span> &lt; kkksc03) &#123;</span><br><span class="line">					kkksc03 = chen_zhe[j] - <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			sum[kkksc03]++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">		cout &lt;&lt; sum[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    时间        1 MS<br>    内存        1568 KB<br>    语言        C++<br>    代码长度    684</p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>Bear and Displayed Friends题解</title>
    <url>/posts/241418217/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="Bear-and-Displayed-Friends"><a href="#Bear-and-Displayed-Friends" class="headerlink" title="Bear and Displayed Friends"></a>Bear and Displayed Friends</h3><span id="more"></span>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>利马克是一只小北极熊。他喜欢通过社交网络与其他熊联系。他有n个朋友，他与其中第i个朋友的关系由一个独特的整数ti来描述。这个值越大，友谊就越好。没有两个朋友有相同的值ti。</p>
<p>春天开始了，熊的冬季睡眠结束了。利马克刚刚醒来并登录了。他所有的朋友都还在睡觉，因此他们都不在线。在接下来的几个小时里，他们中的一些（也许是全部）会出现在网上，一次一个。</p>
<p>系统显示正在在线的朋友。在屏幕上，最多可以显示k个朋友。如果有超过k个朋友在线，那么系统只显示其中最好的k个朋友–那些有最大蒂的朋友。</p>
<p>你的任务是处理两种类型的查询。</p>
<p>“1 id”–朋友id成为在线。保证他以前不在线。<br>“2 id”- 检查系统是否显示了朋友的ID。在另一行打印 “YES “或 “NO”。<br>你能帮助Limak并回答所有第二类的询问吗？</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>第一行包含三个整数n、k和q（1≤n,q≤150000,1≤k≤min(6,n)）–分别是朋友的数量、显示的最大在线朋友数量和查询的数量。</p>
<p>第二行包含n个整数t1,t2,…,tn（1≤ti≤1e9），其中ti描述Limak与第i个朋友的关系有多好。</p>
<p>下面q行中的第i行包含两个整数typei和idi（1≤typei≤2,1≤idi≤n）–第i个查询。如果typei&#x3D;1，那么朋友idi成为在线。如果typei&#x3D;2，那么你应该检查一个朋友idi是否被显示。</p>
<p>保证没有两个第一类型的查询会有相同的白痴，因为一个朋友不可能在线两次。另外，保证至少有一个查询是第二种类型的（typei&#x3D;2），所以输出不会是空的。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>对于每个第二类型的查询，如果给定的朋友被显示，则打印一行答案–”YES”（不带引号），否则打印 “NO”（不带引号）。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入</p>
<pre><code>4 2 8
300 950 500 200
1 3
2 4
2 3
1 1
1 2
2 1
2 2
2 3
</code></pre>
<p>输出</p>
<pre><code>NO
YES
NO
YES
YES
</code></pre>
<p>输入</p>
<pre><code>6 3 9
50 20 51 17 99 24
1 3
1 4
1 5
1 2
2 4
2 2
1 1
2 4
2 3
</code></pre>
<p>输出</p>
<pre><code>NO
YES
NO
YES
</code></pre>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>在第一个例子中，Limak有4个朋友，他们最初都在睡觉。起初，系统显示无人，因为没有人在线。有以下8个查询。<br>“1 3”- 朋友3成为在线。<br>“2 4”–我们应该检查朋友4是否被显示。他甚至不在线，因此我们打印 “NO”。<br>“2 3”- 我们应该检查朋友3是否被显示。现在他是唯一在线的朋友，系统显示他。我们应该打印 “YES”。<br>“1 1”- 朋友1变得在线。系统现在同时显示朋友1和朋友3。<br>“1 2”–朋友2变成在线。现在有3个朋友在线，但我们得到的是k&#x3D;2，所以只能显示两个朋友。利马克与朋友1的关系比与其他两个在线朋友的关系差（t1&lt;t2,t3），所以朋友1不会被显示。<br>“2 1”- 打印 “NO”。<br>“2 2”–打印 “YES”。<br>“2 3”–打印 “YES”。</p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    2 秒<br>    内存限制    256 MB<br>    来源        FYOJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>很适合联系优先队列的一道题……<br>直接打！</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,k,q;</span><br><span class="line"><span class="type">int</span> a[<span class="number">150010</span>];</span><br><span class="line">priority_queue &lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,less&lt;<span class="type">int</span>&gt; &gt; q1,q2;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">	<span class="comment">//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">	cin &gt;&gt; n &gt;&gt; k &gt;&gt; q;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		cin &gt;&gt; a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)&#123;</span><br><span class="line">		<span class="type">int</span> ch,id;</span><br><span class="line">		cin &gt;&gt; ch &gt;&gt; id;</span><br><span class="line">		<span class="keyword">if</span> (ch == <span class="number">1</span>)&#123;</span><br><span class="line">			q1.<span class="built_in">push</span>(a[id]);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (!q1.<span class="built_in">empty</span>())&#123;</span><br><span class="line">				q2 = q1;</span><br><span class="line">				<span class="type">bool</span> b = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; j++)&#123;</span><br><span class="line">					<span class="keyword">if</span> (a[id] == q2.<span class="built_in">top</span>())&#123;</span><br><span class="line">						cout &lt;&lt; <span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">						b = <span class="number">1</span>;</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					q2.<span class="built_in">pop</span>();</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (!b)&#123;</span><br><span class="line">					cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    时间        0 MS<br>    内存        720 KB<br>    语言        C++<br>    代码长度    700        </p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>Bear and Three Balls题解</title>
    <url>/posts/3224990952/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="Bear-and-Three-Balls"><a href="#Bear-and-Three-Balls" class="headerlink" title="Bear and Three Balls"></a>Bear and Three Balls</h3><span id="more"></span>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>利马克是一只小北极熊。他有n个球，第i个球的大小为ti。</p>
<p>利马克想给他的三个朋友各送一个球。送礼物并不容易，为了让朋友们高兴，利马克必须遵守两条规则。</p>
<p>没有两个朋友可以得到相同大小的球。 没有两个朋友可以得到大小相差超过2的球。 例如，利马克可以选择大小为4、5和3的球，或者大小为90、91和92的球。但他不能选择尺寸为5、5和6的球（两个朋友会得到相同尺寸的球），也不能选择尺寸为30、31和33的球（因为尺寸30和33相差超过2）。</p>
<p>你的任务是检查Limak是否能选择满足上述条件的三个球。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入的第一行包含一个整数n（3≤n≤50）–Limak拥有的球的数量。</p>
<p>第二行包含n个整数t1,t2,…,tn（1≤ti≤1000），ti表示第i个球的大小。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>如果Limak能够选择三个不同大小的球，并且其中任何两个球的大小相差不超过2，则打印 “YES”（不带引号）。否则，打印 “NO”（不带引号）。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入1</p>
<pre><code>4
18 55 16 17
</code></pre>
<p>输出1</p>
<pre><code>YES
</code></pre>
<p>输入2</p>
<pre><code>6
40 41 43 44 44 44
</code></pre>
<p>输出2</p>
<pre><code>NO
</code></pre>
<p>输入3</p>
<pre><code>8
5 972 3 4 1 4 970 971
</code></pre>
<p>输出3</p>
<pre><code>YES
</code></pre>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>在第一个例子中，有4个球，Limak能够选择其中的三个球来满足规则。他必须选择尺寸为18、16和17的球。<br>在第二个例子中，没有办法在不违反规则的情况下给三个朋友送礼物。<br>在第三个例子中，选择球的方法甚至不止一种。<br>选择大小为3、4和5的球。<br>选择尺寸为972、970、971的球。</p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    2 秒<br>    内存限制    256 MB<br>    来源        FYOJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>STL大法好！！！<br>直接k！</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> s[<span class="number">10010</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		cin &gt;&gt; s[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(s,s+n);</span><br><span class="line">	<span class="type">int</span> ans = <span class="built_in">unique</span>(s,s+n)-s;   </span><br><span class="line">	<span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ans; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(s[i+<span class="number">1</span>] == s[i]+<span class="number">1</span> &amp;&amp; s[i+<span class="number">2</span>] == s[i+<span class="number">1</span>]+<span class="number">1</span>) &#123;</span><br><span class="line">			b = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(b)&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">	&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">		cout &lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    时间        1 MS<br>    内存        720 KB<br>    语言        C++<br>    代码长度    393</p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>Bear and Two Paths题解</title>
    <url>/posts/3555695836/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="Bear-and-Two-Paths"><a href="#Bear-and-Two-Paths" class="headerlink" title="Bear and Two Paths"></a>Bear and Two Paths</h3><span id="more"></span>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>熊岛有n个城市，编号为1到n。城市通过双向道路连接。每条路都连接着两个不同的城市。没有两条路是连接同一对城市的。</p>
<p>有一次，熊利马克在一个城市a，他想去一个城市b，但没有直接的连接，所以他决定走很长的路，每个城市正好走一次。从形式上看。</p>
<p>a和b之间没有路。<br>存在一个由n个不同的城市组成的序列（路径）v1,v2,…,vn，v1&#x3D;a，vn&#x3D;b，并且在vi和vi+1之间有一条路，为 。<br>有一天，类似的事情发生了。利马克想在一个城市c和一个城市d之间旅行。它们之间没有路，但存在一个n个不同城市的序列u1,u2,…,un，u1&#x3D;c，un&#x3D;d，并且在ui和ui+1之间有一条路。</p>
<p>此外，Limak认为在Bearland最多有k条路。他想知道自己的记忆是否正确。</p>
<p>给定n，k和四个不同的城市a，b，c，d，你能找到满足所有给定条件的可能路径（v1，…，vn）和（u1，…，un）吗？找到任何解决方案，如果不可能，则打印-1。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入的第一行包含两个整数n和k（4≤n≤1000，n-1≤k≤2n-2）–分别为城市的数量和允许的最大道路数量。</p>
<p>第二行包含四个不同的整数a、b、c和d（1≤a、b、c、d≤n）。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>如果不可能满足所有给定条件，则打印-1。否则，打印两行路径描述。这两行中的第一行应该包含n个不同的整数v1,v2,…,vn，其中v1&#x3D;a和vn&#x3D;b。第二行应该包含n个不同的整数u1,u2,…,un，其中u1&#x3D;c，un&#x3D;d。</p>
<p>两条路径最多产生2n-2条路。(v1,v2), (v2,v3), …, (vn-1,vn), (u1,u2), (u2,u3), …, (un-1,un)。如果你的答案包含超过k条不同的道路或有任何其他条件的破坏，你的答案将被视为错误。请注意，(x,y)和(y,x)是同一条路。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入</p>
<pre><code>7 11
2 4 7 3
</code></pre>
<p>输出</p>
<pre><code>2 7 1 5 6 3 4
7 2 1 5 6 4 3
</code></pre>
<p>输入</p>
<pre><code>1000 999
10 20 30 40
</code></pre>
<p>输出</p>
<pre><code>-1
</code></pre>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>在第一个样本测试中，应该有7个城市和最多11条道路。所提供的样本解决方案生成了10条道路，如图所示。你还可以看到长度为n的2到4的简单路径，以及7到3的路径。<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/16516402853802.png"></p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    2 秒<br>    内存限制    256 MB<br>    来源        FYOJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>按题目模拟即可~<br>就很奇怪<br>样例都通不过<br>交上去就AC了？</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">int</span> a,b,c,d;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">	<span class="comment">//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">	cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;</span><br><span class="line">	<span class="keyword">if</span> (k &lt; n+<span class="number">1</span> || n == <span class="number">4</span>)&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; c &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i != a &amp;&amp; i != b &amp;&amp; i != c &amp;&amp; i != d)&#123;</span><br><span class="line">				cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">				v.<span class="built_in">push_back</span>(i);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; d &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		cout &lt;&lt; c &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		<span class="keyword">for</span>  (<span class="type">int</span> i = <span class="number">0</span>; i &lt; v.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">			cout &lt;&lt; v[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; b &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; d &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    时间        1 MS<br>    内存        736 KB<br>    语言        C++<br>    代码长度    621</p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>Far Relative’s Birthday Cake 题解</title>
    <url>/posts/180282341/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="Far-Relative’s-Birthday-Cake"><a href="#Far-Relative’s-Birthday-Cake" class="headerlink" title="Far Relative’s Birthday Cake"></a>Far Relative’s Birthday Cake</h3><span id="more"></span>

<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>门的家人要庆祝门的生日聚会。他们很喜欢Famil Door，所以他们打算为他做一个奇怪的生日蛋糕。<br>蛋糕是一个n×n的正方形，由边长为1的相等的方块组成，每个方块不是空的就是由一块巧克力组成。他们买了蛋糕，随机开始把巧克力放在蛋糕上。Famil Door的幸福值将等于有巧克力的单元格在蛋糕的同一行或同一列的对数。法米尔门的家人在想，法米尔的幸福值会是多少？<br>请注意，任何一对都不能超过一次，因为两个不同的单元格不能同时在同一行和同一列中。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>在输入的第一行，你会得到一个整数n（1≤n≤100）–蛋糕边的长度。<br>然后是n行，每行包含n个字符。空的单元格用’.’表示，而含有巧克力的单元格用’C’表示。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>打印Famil Door的幸福值，即共享同一行或同一列的巧克力块的数量。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入</p>
<pre><code>3
.CC
C..
C.C
</code></pre>
<p>输出</p>
<pre><code>4
</code></pre>
<p>输入</p>
<pre><code>4
CC..
C..C
.CC.
.CC.
</code></pre>
<p>输出</p>
<pre><code>9
</code></pre>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>如果我们从上到下对行进行编号，从左到右对列进行编号，那么，在第一个样本中共享同一行的作品是。</p>
<p>(1,2) and (1,3)<br>(3,1) and (3,3)<br>共享同一列的作品有：<br>(2,1) and (3,1)<br>(1,3) and (3,3)</p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    2 秒<br>    内存限制    256 MB<br>    来源        FYOJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><blockquote>
<p>  骗分过样例<br>    暴力出奇迹<br>    暴搜挂着机<br>    打标进省一</p>
</blockquote>
<p><del>咳咳咳，不装了</del><br>数据只有100<br>考虑暴力！！！</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> a[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">	<span class="comment">//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		cin &gt;&gt; s;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">			a[i][j] = s[j<span class="number">-1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line">				sum++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans += sum*(sum<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		<span class="type">int</span> sum1 = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">			<span class="keyword">if</span> (a[j][i] == <span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line">				sum1++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans += sum1*(sum1<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    时间        1 MS<br>    内存        720 KB<br>    语言        C++<br>    代码长度    655</p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>公告栏</title>
    <url>/posts/1528610346/</url>
    <content><![CDATA[<p>Hi~ 毕业考结束了，我又回来维护博客了！</p>
<span id="more"></span>]]></content>
      <tags>
        <tag>公告</tag>
      </tags>
  </entry>
  <entry>
    <title>有关和王有缘暂时停止合作的通知</title>
    <url>/posts/2954149272/</url>
    <content><![CDATA[<p>尊敬的各位用户：<br>大家好！</p>
<p>作为班里最大的资源提供中心（602谢言射资源提供站），我公司所提供的资源都是和602王有缘资源提供站经过讨论后出口的，所以在一般情况下，正确率为98%。</p>
<span id="more"></span>
<p>但由于620王有缘资源提供站三番五次地调戏我公司创始人——谢言射。同俗地讲，就是将不合格资源和我公司的出口产品讨论，而我公司创始人——谢言射同志又十分信任对方公司的创始人——王有缘，于是将公司提供的合格资源全部替换为602王有缘资源提供站的不合格资源，导致我公司所出口的资源正确率降为93%。</p>
<p>对此，谢言射在此对各位用户做出道歉，并暂时和王有缘停止合作，希望602王有缘资源提供站能进行反省，并将这些问题彻底地改正，以便为各位用户提供更好的资源。</p>
<p>当然，602谢言射资源提供站所提供的服务并不会虽之暂停。</p>
<p align="right">谢言射团队&602谢言射资源提供站</p>
<p align="right">2022年5月13日</p>
]]></content>
      <tags>
        <tag>公告</tag>
      </tags>
  </entry>
  <entry>
    <title>luo1046-----非负和 题解</title>
    <url>/posts/3358763417/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="非负和"><a href="#非负和" class="headerlink" title="非负和"></a>非负和</h3><span id="more"></span>

<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>罗老师给大家n个数字：a1,a2,a3, .. , an。<br>这些数字可以循环，ai, ai+1, ai+2, … , an, a1, a2, … , ai-1。<br>显然，这样的循环有n种。<br>现在问大家，n种中有多少种保证从第一项到任意项的和大于等于0<br>比如<br>3<br>-1 1 1<br>有三种：<br>-1 1 1<br>1 1 -1<br>1 -1 1<br>其中第一种第一项到第1,2,3项的和分别为： -1， 0， 1<br>第二种第一项到第1,2,3项的和分别为： 1， 2， 1<br>第三种第一项到第1,2,3项的和分别为： 1， 0， 1<br>所以第二种和第三种符合，答案为2</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入n</p>
<p>然后输入n个数字ai</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出有多少种符合</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">-1 1 1</span><br></pre></td></tr></table></figure>
<p>输出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>【数据规模和约定】<br>1&lt;&#x3D;n&lt;&#x3D;1000000<br>-1000&lt;&#x3D;ai&lt;&#x3D;1000</p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    2 秒<br>    内存限制    128 MB<br>    来源        luo’s OJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>luo1428—–区间最小最大值的加强版<br>直接上！</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,t,w,chen_zhe;</span><br><span class="line"><span class="type">int</span> a[<span class="number">2000010</span>],sum[<span class="number">2000010</span>],kkksc03[<span class="number">2000010</span>],id[<span class="number">2000010</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">	<span class="comment">//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">		a[i+n] = a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>*n; i++)&#123;</span><br><span class="line">		sum[i] = sum[i<span class="number">-1</span>]+a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	t = w = <span class="number">1</span>;</span><br><span class="line">	kkksc03[<span class="number">1</span>] = sum[<span class="number">1</span>];</span><br><span class="line">	id[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		<span class="keyword">while</span> (sum[i] &lt; kkksc03[w])&#123;</span><br><span class="line">			w--;</span><br><span class="line">			<span class="keyword">if</span> (w &lt; t)&#123;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		w++;</span><br><span class="line">		kkksc03[w] = sum[i];</span><br><span class="line">		id[w] = i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (kkksc03[t] &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">		chen_zhe++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = n+<span class="number">1</span>; i &lt;= <span class="number">2</span>*n<span class="number">-1</span>; i++)&#123;</span><br><span class="line">		<span class="keyword">while</span> (id[t] &lt; i-n+<span class="number">1</span>)&#123;</span><br><span class="line">			t++;</span><br><span class="line">			<span class="keyword">if</span> (t &gt; w)&#123;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (w &gt;= t)&#123;</span><br><span class="line">			<span class="keyword">while</span> (sum[i] &lt; kkksc03[w])&#123;</span><br><span class="line">				w--;</span><br><span class="line">				<span class="keyword">if</span> (w &lt; t)&#123;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;		</span><br><span class="line">		&#125;</span><br><span class="line">		w++;</span><br><span class="line">		kkksc03[w] = sum[i];</span><br><span class="line">		id[w] = i;</span><br><span class="line">		<span class="keyword">if</span> (kkksc03[t]-sum[i-n] &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">			chen_zhe++; </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,chen_zhe);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    耗时        721 MS<br>    内存        33428 KB<br>    语言        C++<br>    代码长度    983 bytes</p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
        <tag>luo&#39;s OJ</tag>
      </tags>
  </entry>
  <entry>
    <title>luo2086-----奶牛排队 题解</title>
    <url>/posts/659898594/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="奶牛排队"><a href="#奶牛排队" class="headerlink" title="奶牛排队"></a>奶牛排队</h3><span id="more"></span>

<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>奶牛排队 奶牛在熊大妈的带领下排成了一条直队。 显然，不同的奶牛身高不一定相同…… 现在，奶牛们想知道，如果找出一些连续的奶牛，要求最左边的奶牛A是最矮的，最右边的B是最高的，且B高于A奶牛，且中间如果存在奶牛，则身高不能和A、B奶牛相同，的这样的一些奶牛最多会有多少头。 从左到右给出奶牛的身高，请告诉它们符合条件的最多的奶牛数（答案可能是零、二，但不会是一）。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入 第一行一个数N（2&lt; &#x3D;N&lt; &#x3D;100000），表示奶牛的头数。 接下来N个数，每行一个数，从上到下表示从左到右奶牛的身高（1&lt; &#x3D;身高&lt; &#x3D;maxlongint）。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>输出 一行，表示最多奶牛数。</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>输出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    2 秒<br>    内存限制    128 MB<br>    来源        luo’s OJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>可以理解为一个大的值，可以把前面比他小的值都吞灭，然后记录吞灭的最小值位置<br>所以可以构造单调下降队列（栈），表示将每个小递增段并到最后一个高点上<br>每个高点可以向左找被吞并小段的低点，记录最低点，高点到这个最低点位置为一个答案</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,a[<span class="number">100010</span>];</span><br><span class="line"><span class="type">int</span> sum;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">	<span class="type">int</span> x,y;</span><br><span class="line">&#125;t;</span><br><span class="line">deque&lt;Node&gt; q;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">	<span class="comment">//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">		t.x = i;</span><br><span class="line">		t.y = i;</span><br><span class="line">		<span class="keyword">while</span>(!q.<span class="built_in">empty</span>() &amp;&amp; a[q.<span class="built_in">back</span>().y] &lt; a[i])&#123;</span><br><span class="line">			<span class="keyword">if</span> (a[t.x] &gt; a[q.<span class="built_in">back</span>().x])&#123;</span><br><span class="line">				t.x = q.<span class="built_in">back</span>().x;</span><br><span class="line">			&#125;</span><br><span class="line">			q.<span class="built_in">pop_back</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		sum = <span class="built_in">max</span>(sum,t.y-t.x+<span class="number">1</span>);</span><br><span class="line">		q.<span class="built_in">push_back</span>(t);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (sum == <span class="number">1</span>)&#123;</span><br><span class="line">		sum = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    耗时        132 MS<br>    内存        3380 KB<br>    语言        C++<br>    代码长度    544 bytes</p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
        <tag>luo&#39;s OJ</tag>
      </tags>
  </entry>
  <entry>
    <title>luo1428-----区间最小最大值 题解</title>
    <url>/posts/8623461/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="区间最小最大值"><a href="#区间最小最大值" class="headerlink" title="区间最小最大值"></a>区间最小最大值</h3><span id="more"></span>

<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定n个元素，以及一个正整数w，求每段区间的最小最大值。这些区间为：[1,1+w-1], [2,2+w-1], …, [n-w+1,n]。</p>
<p>例如8个元素为[1 3 -1 -3 5 3 6 7], w为3，那么有下列最小最大值：</p>
<table>
<thead>
<tr>
<th>区间</th>
<th>最小值</th>
<th>最大值</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>[1  3  -1] -3  5  3  6  7</td>
<td>-1</td>
<td>3</td>
<td></td>
</tr>
<tr>
<td>1 [3  -1  -3] 5  3  6  7</td>
<td>-3</td>
<td>3</td>
<td></td>
</tr>
<tr>
<td>1  3 [-1  -3  5] 3  6  7</td>
<td>-3</td>
<td>5</td>
<td></td>
</tr>
<tr>
<td>1  3  -1 [-3  5  3] 6  7</td>
<td>-3</td>
<td>5</td>
<td></td>
</tr>
<tr>
<td>1  3  -1  -3 [5  3  6] 7</td>
<td>3</td>
<td>6</td>
<td></td>
</tr>
<tr>
<td>1  3  -1  -3  5 [3  6  7]</td>
<td>3</td>
<td>7</td>
<td></td>
</tr>
</tbody></table>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>第一行输入n,w</p>
<p>第二行输入n个整数</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>第一行输出区间最小值</p>
<p>第二行输出区间最大值</p>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><p>输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">8 3</span><br><span class="line">1 3 -1 -3 5 3 6 7</span><br></pre></td></tr></table></figure>

<p>输出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-1 -3 -3 -3 3 3</span><br><span class="line">3 3 5 5 6 7</span><br></pre></td></tr></table></figure>

<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>1&lt;&#x3D;n&lt;&#x3D;10^6  1&lt;&#x3D;w&lt;&#x3D;n</p>
<p>10^-9 &lt;&#x3D; 元素 &lt;&#x3D; 10^9</p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><blockquote>
<p>  时间限制    2 秒<br>    内存限制    128 MB<br>    来源        luo’s OJ</p>
</blockquote>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>求最小值：<br>构建一个单调递增序列，即单调队列，队首是最小值，队尾是最大值<br>队首是当前区间的最小值，但随着区间的右移动，队首优先会失效并弹出<br>队尾维护单调队列，如果新增元素小于队尾元素，则队尾元素弹出，<br>直到队尾元素小于新增元素或队列为空，这样保证队列中的元素是单调递增的</p>
<p>code：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,w,a[<span class="number">1000010</span>];</span><br><span class="line">deque&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">	<span class="comment">//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;w);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		<span class="keyword">while</span> (!q.<span class="built_in">empty</span>() &amp;&amp; q.<span class="built_in">front</span>() &lt;= i-w)&#123;</span><br><span class="line">			q.<span class="built_in">pop_front</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span> (!q.<span class="built_in">empty</span>() &amp;&amp; a[q.<span class="built_in">back</span>()] &gt;= a[i])&#123;</span><br><span class="line">			q.<span class="built_in">pop_back</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		q.<span class="built_in">push_back</span>(i);</span><br><span class="line">		<span class="keyword">if</span> (i &gt;= w)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[q.<span class="built_in">front</span>()]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	q.<span class="built_in">clear</span>();</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		<span class="keyword">while</span> (!q.<span class="built_in">empty</span>() &amp;&amp; q.<span class="built_in">front</span>() &lt;= i-w)&#123;</span><br><span class="line">			q.<span class="built_in">pop_front</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span> (!q.<span class="built_in">empty</span>() &amp;&amp; a[q.<span class="built_in">back</span>()] &lt;= a[i])&#123;</span><br><span class="line">			q.<span class="built_in">pop_back</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		q.<span class="built_in">push_back</span>(i);</span><br><span class="line">		<span class="keyword">if</span> (i &gt;= w)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[q.<span class="built_in">front</span>()]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  测评结果    通过<br>    分数        100<br>    耗时        174 MS<br>    内存        6088 KB<br>    语言        C++<br>    代码长度    788 bytes</p>
</blockquote>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
        <tag>luo&#39;s OJ</tag>
      </tags>
  </entry>
  <entry>
    <title>博客暂时通知维护的通知</title>
    <url>/posts/3869669730/</url>
    <content><![CDATA[<p>各位网友、同志们：<br>大家好！<br>由于小学毕业考即将到来，为了谢言射的前途考虑，我团队决定将暂时停止博客的维护，但不会全部停止，只是维护会比较缓慢，停止维护时间大致为5.20~6.20，为您到来不便烦请原谅。</p>
<span id="more"></span>

<p>我团队在此保证，等毕业考一结束，我团队会立刻恢复博客的维护工作，绝不会让各位久等！</p>
<p align="right">谢言射团队</p>
<p align="right">2022年5月18日</p>]]></content>
      <tags>
        <tag>公告</tag>
      </tags>
  </entry>
  <entry>
    <title>水壶(NOI Online3 lfw数据) 题解</title>
    <url>/posts/3361761468/</url>
    <content><![CDATA[<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="水壶-NOI-Online3-lfw数据"><a href="#水壶-NOI-Online3-lfw数据" class="headerlink" title="水壶(NOI Online3 lfw数据)"></a>水壶(NOI Online3 lfw数据)</h3><span id="more"></span>
<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>有 n 个容量无穷大的水壶，它们从 1∼n 编号，初始时 i 号水壶中装有 Ai 单位的水。<br>你可以进行不超过 k 次操作，每次操作需要选择一个满足 1≤x≤n−1 的编号 x，然后把 x 号水壶中的水全部倒入 x+1 号水壶中。<br>最后你可以任意选择恰好一个水壶，并喝掉水壶中所有的水。现在请你求出，你最多能喝到多少单位的水。</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>第一行一个正整数 n，表示水壶的个数。<br>第二行一个非负整数 k，表示操作次数上限。<br>第三行 n 个非负整数，相邻两个数用空格隔开，表示水壶的初始装水量 A1,A2,…,An。</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>一行，仅一个非负整数，表示答案。</p>
<h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">5</span><br><span class="line">890 965 256 419 296 987 45 676 976 742</span><br></pre></td></tr></table></figure>

<h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3813</span><br></pre></td></tr></table></figure>

<h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>10%的数据    n&lt;&#x3D;10<br>30%的数据    n&lt;&#x3D;100<br>50%的数据    n&lt;&#x3D;1000<br>70%的数据    n&lt;&#x3D;10^5<br>100%的数据   1&lt;&#x3D;n&lt;&#x3D;10^6, 0&lt;&#x3D;k&lt;&#x3D;n-1, 0&lt;&#x3D;Ai&lt;&#x3D;10^3</p>
<blockquote>
<p>  时间限制: 1.000 Sec<br>    内存限制: 128 MB<br>    来源：Luo’s OJ</p>
</blockquote>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><p>emmm……这题我们老师是用来讲对拍的<br>暴力也可以，但这里用的是前缀和</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">int</span> a[<span class="number">1000010</span>],sum; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>,x; i &lt;= n; i++)&#123;</span><br><span class="line">		cin &gt;&gt; x;</span><br><span class="line">		a[i] = a[i - <span class="number">1</span>] + x;</span><br><span class="line">	&#125;</span><br><span class="line">	k++;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i + k - <span class="number">1</span> &lt;= n; i++) &#123;</span><br><span class="line">		<span class="type">int</span> j = i + k - <span class="number">1</span>;</span><br><span class="line">		sum = <span class="built_in">max</span>(sum,a[j] - a[i - <span class="number">1</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/Dingtalk_20220629100331.jpg"></p>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
        <tag>luo&#39;s OJ</tag>
      </tags>
  </entry>
  <entry>
    <title>2022绍兴小学-----问题 A: 分组(group) 题解</title>
    <url>/posts/866924548/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="问题-A-分组-group"><a href="#问题-A-分组-group" class="headerlink" title="问题 A: 分组(group)"></a>问题 A: 分组(group)</h2><span id="more"></span>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小楠今年四年级了！在一天的数学课上，老师介绍了鸡兔同笼问题：<br>「今有雉兔同笼，上有三十五头，下有九十四足，问雉兔各几何？」<br>小楠立刻就在脑子里想到了一个类似的问题：有n个小朋友在上体育课，现在老师要对这些小朋友进行分组，既可以x个小朋友分一组，也可以y个分一组，怎么分组才可以让每个小朋友恰好属于一个组。<br>小楠立刻想到分组方案可能有很多种，所以他想x个一组的组尽量少。<br>聪明的小楠立刻就想到了方案，所以他想考考同样聪明的你。他告诉了你n、x、y的值，想要你回答他分成x个一组的组数和分成y个一组的组数。<br>不过小楠可能会搞恶作剧，也就是说可能不存在一种合法的分组方案，这个时候你要告诉他“Impossible”。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>一行三个整数n,x,y。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>一行两个整数，分别表示分成x个一组的组数和分成y个一组的组数。如果无解，输出 “Impossible”。</p>
<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">10 2 3</span><br></pre></td></tr></table></figure>
<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2 2</span><br></pre></td></tr></table></figure>

<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><h3 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">10 5 2</span><br></pre></td></tr></table></figure>
<h3 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0 5</span><br></pre></td></tr></table></figure>
<h3 id="样例输入3"><a href="#样例输入3" class="headerlink" title="样例输入3"></a>样例输入3</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">11 3 6</span><br></pre></td></tr></table></figure>
<h3 id="样例输出3"><a href="#样例输出3" class="headerlink" title="样例输出3"></a>样例输出3</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Impossible</span><br></pre></td></tr></table></figure>
<h2 id="【数据范围】"><a href="#【数据范围】" class="headerlink" title="【数据范围】"></a>【数据范围】</h2><p>对于前30% 的数据，保证x&#x3D;y；<br>对于所有数据，有1≤x,y≤n, 1≤n≤100。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>emmm……本来水题一道，但比赛的时候脑子短路了，只拿了90分……</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,x,y,flag;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;x,&amp;y);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n/x; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>((n-x*i)%y == <span class="number">0</span>)&#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,i,(n-x*i)/y);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Impossible\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>2022绍兴小学-----问题 B: 华容道(huarong) 题解</title>
    <url>/posts/662691727/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="问题-B-华容道-huarong"><a href="#问题-B-华容道-huarong" class="headerlink" title="问题 B: 华容道(huarong)"></a>问题 B: 华容道(huarong)</h2><span id="more"></span>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小童是一个喜欢数字华容道的女生。<br>数字华容道游戏是一种最早的滑块类游戏，常见的类型有十五数字推盘游戏和八数字推盘游戏等。十五数字华容道游戏的板上会有十五个方块和一个大小相当于一个方块的空位（供方块移动之用）。而八数字华容道游戏，为九宫格布局，有八个方块和一个空位（如图1）。</p>
<p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/20220705095540_24528.jpg" alt="图1 八数字推盘游戏的棋盘"></p>
<p>在小童十岁生日的当天，小童的叔叔送给了她一块八数字华容道游戏作为生日礼物。<br>在送给小童之前，叔叔打乱了这块华容道，想要小童还原它。<br>聪明的小童当然立刻就还原了，并且还记下了还原的过程。<br>第二天上学的时候，小童告诉了你她还原的过程，想要学习信息学竞赛的你编写一个程序回答她，叔叔送她的华容道在小童开始还原之前是什么样的。<br>具体的，小童还原一共有 n 步，每一步可以用一个字符表示：<br>第i个字符如果是‘L’，则表示小童第i次是把空位左边的块移到了空位；<br>第i个字符如果是‘R’，则表示小童第i次是把空位右边的块移到了空位；<br>第i个字符如果是‘U’，则表示小童第i次是把空位上边的块移到了空位；<br>第i个字符如果是‘D’，则表示小童第i次是把空位下边的块移到了空位。<br>另外，小童是一个诚实的孩子，所以她告诉你的还原过程一定是合法的。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行一个整数n，表示小童整个还原过程共 n 步。<br>第二行为一个长度为n的字符串S，第i个字符表示了小童第i步是怎么操作的。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>三行三个整数，每行两个整数之间有一个空格，表示华容道一开始的样子，空位的位置用0填充。</p>
<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">LURD</span><br></pre></td></tr></table></figure>

<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">4 8 5</span><br><span class="line">7 6 0</span><br></pre></td></tr></table></figure>

<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>我们可以通过小童的操作从后往前一步一步倒推出华容道一开始的样子，比如小童第i次操作是把空位下的块往上移倒过来倒推回去就相当于是空位往上移动了一格，然后原本在空位上面的格子里的数往下移。具体对于样例来说就是：<br>1 2 3    1 2 3    1 2 3    1 2 3    1 2 3<br>4 5 6 -&gt; 4 5 0 -&gt; 4 0 5 -&gt; 4 8 5 -&gt; 4 8 5<br>7 8 0    7 8 6    7 8 6    7 0 6    7 6 0</p>
<h2 id="【数据范围约定】"><a href="#【数据范围约定】" class="headerlink" title="【数据范围约定】"></a>【数据范围约定】</h2><p>对于10% 的数据，n&#x3D;0；<br>对于30% 的数据，n≤1；<br>另有30% 的数据，S中只含有‘L’和‘R’两种字符；<br>对于所有数据，0≤n≤50，S中只含有‘L’、‘R’、‘U’和‘D’四种字符。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>嗯，很好，模拟题，轻轻松松AC</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,g[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line"><span class="type">char</span> s[<span class="number">55</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    g[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>; </span><br><span class="line">    g[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">    g[<span class="number">1</span>][<span class="number">3</span>] = <span class="number">3</span>;</span><br><span class="line">    g[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">4</span>; </span><br><span class="line">    g[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">5</span>; </span><br><span class="line">    g[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">6</span>;</span><br><span class="line">    g[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">7</span>; </span><br><span class="line">    g[<span class="number">3</span>][<span class="number">2</span>] = <span class="number">8</span>; </span><br><span class="line">    g[<span class="number">3</span>][<span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> x = <span class="number">3</span>,y = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">&#x27;L&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">swap</span>(g[x][y],g[x][y+<span class="number">1</span>]), y++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;R&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">swap</span>(g[x][y],g[x][y<span class="number">-1</span>]),y--;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;U&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">swap</span>(g[x][y],g[x+<span class="number">1</span>][y]),x++;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">swap</span>(g[x][y],g[x<span class="number">-1</span>][y]),x--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)&#123;</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,g[i][j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,g[i][<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>想不出写什么了，给你们出道题吧1</title>
    <url>/posts/3759783517/</url>
    <content><![CDATA[<p>一个国王有1000瓶酒，想在生日那天喝。但被人投了毒，其中1瓶有毒，喝了第二天会死。国王有群囚犯，他想让囚犯试毒，可是第二天就是国王的生日，那么请问<strong>最少</strong>动用多少囚犯，才能<strong>保证</strong>找出那瓶毒酒？</p>
<span id="more"></span>
<p>（答案见下期）</p>
]]></content>
      <tags>
        <tag>逻辑推理</tag>
      </tags>
  </entry>
  <entry>
    <title>学校游记4（毕业了，再也不续）</title>
    <url>/posts/20400546/</url>
    <content><![CDATA[<h2 id="2022-4-13"><a href="#2022-4-13" class="headerlink" title="2022.4.13"></a>2022.4.13</h2><p>《我和我的同住》<br>《我和我的同住》<br>《我和我的同住》</p>
<span id="more"></span>

<h2 id="2022-4-14"><a href="#2022-4-14" class="headerlink" title="2022.4.14"></a>2022.4.14</h2><p><a href="https://xys-blog.cf/posts/3919692788/">look!</a></p>
<h2 id="2022-4-18"><a href="#2022-4-18" class="headerlink" title="2022.4.18"></a>2022.4.18</h2><p>同志们同志们<br>啊啊啊<br>我回来了<br>今天嘛……<br>我们一定要谢谢那两个班<br>因为他们<br>我们不用长跑测试了！！！<br><del>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈！</del><br>额<br>其他就没事啦<br>拜拜~</p>
<h2 id="2022-4-19"><a href="#2022-4-19" class="headerlink" title="2022.4.19"></a>2022.4.19</h2><p>同志们赶紧去搜集有关孔子，关羽，项羽的成语（每个各两个）<br>并要记住《真理诞生于一百个问号之后》那一课的三个人物。<br>会让你们受益匪浅的！！！！<br>快点，不然就来不及了！！！</p>
<h2 id="2022-4-24"><a href="#2022-4-24" class="headerlink" title="2022.4.24"></a>2022.4.24</h2><p>哼，我有点生气了<br>我今天才得到消息<br>周三要做水果沙拉<br>这……<br>算了<br>其实也不关我事<br>我就在旁边吃瓜……<br>嘿嘿</p>
<h2 id="2022-4-28"><a href="#2022-4-28" class="headerlink" title="2022.4.28"></a>2022.4.28</h2><p>逆天，开始了</p>
<h2 id="2022-5-6"><a href="#2022-5-6" class="headerlink" title="2022.5.6"></a>2022.5.6</h2><p>明天要考试了，早点休息吧~</p>
<h2 id="2022-5-11"><a href="#2022-5-11" class="headerlink" title="2022.5.11"></a>2022.5.11</h2><p>烤翅烤翅烤翅烤翅~</p>
<h2 id="2022-5-12"><a href="#2022-5-12" class="headerlink" title="2022.5.12"></a>2022.5.12</h2><p><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/%E6%B1%B6%E5%B7%9D14%E5%B9%B4.jpg"></p>
<h2 id="2022-5-19"><a href="#2022-5-19" class="headerlink" title="2022.5.19"></a>2022.5.19</h2><p>大家好<br>我寻思着给我计时的老师忘记按清零了<br>前面的同学投了5个球，25秒<br>我也投了5个球，52秒！！！<br>不！ 可！ 能！<br>PS：试试点一下我的博客界面，会有惊喜哦~<br>提前祝各位520快乐！</p>
<h2 id="2022-7-1"><a href="#2022-7-1" class="headerlink" title="2022.7.1"></a>2022.7.1</h2><p>毕业了！</p>
]]></content>
      <tags>
        <tag>游记</tag>
        <tag>学校</tag>
      </tags>
  </entry>
  <entry>
    <title>常见网络用语大全</title>
    <url>/posts/3791692339/</url>
    <content><![CDATA[<h3 id="注：以下内容借鉴于网络，如有侵权，请联系-x78-x79-x73-119-121-121-49-x40-x31-x36-51-x2e-x63-x6f-x6d-进行修改"><a href="#注：以下内容借鉴于网络，如有侵权，请联系-x78-x79-x73-119-121-121-49-x40-x31-x36-51-x2e-x63-x6f-x6d-进行修改" class="headerlink" title="注：以下内容借鉴于网络，如有侵权，请联系&#x78;&#x79;&#x73;&#119;&#121;&#121;&#49;&#x40;&#x31;&#x36;&#51;&#x2e;&#x63;&#x6f;&#x6d;进行修改"></a>注：以下内容借鉴于网络，如有侵权，请联系<a href="mailto:&#x78;&#x79;&#x73;&#119;&#121;&#121;&#49;&#x40;&#x31;&#x36;&#51;&#x2e;&#x63;&#x6f;&#x6d;">&#x78;&#x79;&#x73;&#119;&#121;&#121;&#49;&#x40;&#x31;&#x36;&#51;&#x2e;&#x63;&#x6f;&#x6d;</a>进行修改</h3><span id="more"></span>

<h2 id="NO-1-网络常用篇"><a href="#NO-1-网络常用篇" class="headerlink" title="NO.1 网络常用篇"></a>NO.1 网络常用篇</h2><p>锦鲤：本是一种高档观赏鱼，2018年国庆节期间，支付宝官方微博推出寻找“中国锦鲤”转发抽奖活动，中奖者即为“中国锦鲤”，引发网友纷纷转发。“锦鲤”一词也因此走红，成为“好运”的象征，如果大家遇到困难与挑战，也会祈求“锦鲤”带来好运。腾讯微信状态中也可设置“求锦鲤”状态。</p>
<p>佛系：平常心。</p>
<p>杠精：指经常的通过抬杠获取快感的人、总是唱反调的人、争辩时故意持相反意见的人。从日本同类词到中国原创与“杠精”一词含义比较接近的网络流行语“ky”，撷取自日语。</p>
<p>确认过眼神：出自林俊杰的《醉赤壁》，用来吐槽的网络语，通常后面接想要吐槽的话。这个梗最开端其实是一个广东小学生在微博上先用的，他在微博上宣布的“确认过眼神，你是广东人”，还配上了一块钱的红包照，用来吐槽广东人的红包小，而“确认过眼神”这个梗也就走红网络。</p>
<p>官宣：字面意为“官方宣布”，现泛指某人或某机构对外正式宣布消息，表达广而告之的含义。</p>
]]></content>
      <tags>
        <tag>网络</tag>
        <tag>时尚</tag>
        <tag>流行</tag>
      </tags>
  </entry>
  <entry>
    <title>2022绍兴小学-----问题 D: 三角形(triangle) 题解</title>
    <url>/posts/195994566/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="问题-D-三角形-triangle"><a href="#问题-D-三角形-triangle" class="headerlink" title="问题 D: 三角形(triangle)"></a>问题 D: 三角形(triangle)</h2><span id="more"></span>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小魏有 3<em>n 根颜色两两不同的木棍，第i根的长度为a[i]。<br>小魏想把这3</em>n根木棍分成n组，每组三根，并且同一组的三根木棍可以组成一个三角形。<br>小魏想知道他有多少种不同的分组方案。认为两个分组方案是不同的,当且仅当两种方案组出来的三角形是不同的。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行一个整数n。<br>第二行3*n个整数a[i]。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>一行一个整数，表示方案数。</p>
<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">3 4 5 10 11 12</span><br></pre></td></tr></table></figure>
<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>

<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>对于20% 的数据，n&#x3D;1；<br>对于50% 的数据，n≤3；<br>对于70% 的数据，n≤4；<br>另有10% 的数据，所有a[i] 全部相等；<br>对于所有数据，1≤n≤5, 1≤a[i] ≤100。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>考试的时候来不及了，打了表，然后只有20分……<br>直接深搜即可。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,a[<span class="number">22</span>],b[<span class="number">22</span>];</span><br><span class="line"><span class="type">int</span> maxn;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (x == n+<span class="number">1</span>)&#123;</span><br><span class="line">		maxn++;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (b[x])&#123;</span><br><span class="line">		<span class="built_in">dfs</span>(x+<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> y = x+<span class="number">1</span>; y &lt;= n; y++)&#123;</span><br><span class="line">		<span class="keyword">if</span> (b[y] == <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> z = y+<span class="number">1</span>; z &lt;= n; z++)&#123;</span><br><span class="line">				<span class="keyword">if</span> (b[z] == <span class="number">0</span>)&#123;</span><br><span class="line">					<span class="keyword">if</span> (a[x]+a[y] &gt; a[z])&#123;</span><br><span class="line">						b[x] = b[y] = b[z] = <span class="number">1</span>;</span><br><span class="line">						<span class="built_in">dfs</span>(x+<span class="number">1</span>);</span><br><span class="line">						b[x] = b[y] = b[z] = <span class="number">0</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">	<span class="comment">//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	n = <span class="number">3</span>*n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(<span class="number">1</span>+a,<span class="number">1</span>+a+n);</span><br><span class="line">	<span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,maxn);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>2022绍兴小学-----问题 C: 美感(beautiful) 题解</title>
    <url>/posts/830323511/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="问题-C-美感-beautiful"><a href="#问题-C-美感-beautiful" class="headerlink" title="问题 C: 美感(beautiful)"></a>问题 C: 美感(beautiful)</h2><span id="more"></span>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>寿寿喜欢有美感的序列。<br>对于寿寿来说一个序列是有美感的，当且仅当这个序列每两个相邻的数的和是m的倍数。特别的，寿寿认为长度为1的序列也是具有美感的。<br>寿寿现在随便在纸上写了一个长度为n的序列a，这个序列目前还不具有美感。因此寿寿想通过删除这个序列中的一些数来让它具有美感。<br>寿寿想知道最少需要删除几个数。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行两个整数n和m。<br>第二行n个正整数表示序列a。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>一行一个整数，表示最少需要删除的数字数。</p>
<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2 2</span><br><span class="line">1 1</span><br></pre></td></tr></table></figure>
<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>样例输入2</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3 2</span><br><span class="line">1 2 1</span><br></pre></td></tr></table></figure>
<p>样例输出2</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>
<p>样例输入3</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">6 3</span><br><span class="line">1 1 4 5 1 4</span><br></pre></td></tr></table></figure>
<p>样例输出3</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p>【数据范围】<br>对于10% 的数据，n&#x3D;2；<br>对于30% 的数据，n≤20；<br>对于50% 的数据，m&#x3D;2；<br>对于80% 的数据，m≤3；<br>对于90% 的数据，n,m≤1000；<br>对于所有数据，1≤n,m≤10^5, 1≤a[i]≤10^9。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>emmm,考试的时候估分90分，结果只有10分！！！<br>啊啊啊，考场代码想不起来了，大家就来看我老师写的吧……</p>
<p>最少删除多少个数字，换个思路就是最多保留多少个数字。<br>如果a[i]和a[j]保留，且相邻，则(a[i]+a[j])%m&#x3D;0。这里有个同余知识(A+B)%M&#x3D;(A%M+B%M)%M (乘法也可以同余)。<br>对于每个a[i]，如果要保留它，前面的数必须满足a[j]&#x3D;(m-a[i]%m)%m。用f[i]记录以i余数作为序列最后一个整数的最多保留数量，得到转移有 f[a[i]%m]&#x3D;f[(m-a[i]%m)%m]+1，最大的f[i]为答案 。</p>
<p>Code:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,f[<span class="number">1000005</span>],maxn; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">	<span class="comment">//freopen(&quot;.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">		<span class="type">int</span> a;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">		f[a%m] = f[(m-a%m)%m]+<span class="number">1</span>;</span><br><span class="line">		maxn = <span class="built_in">max</span>(maxn,f[a%m]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,n-maxn);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>c++</tag>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>分享几道关于绝对值的题</title>
    <url>/posts/1998936257/</url>
    <content><![CDATA[<h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><p>一、<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20220717151745.jpg"></p>
<p>二、<br><img src="https://cdn.jsdelivr.net/gh/xieyanshe666/PicGoCDN/img/dea79233351d74689b5e0a3fe7e54e7.jpg"></p>
<p><del>emmm……答案我已经帮你们涂掉了</del></p>
<span id="more"></span>

<h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>一、<br>（1）这个不用讲了吧<br>（2）这个我们只要去看a、b之间的距离即可，因为它们的距离比“1”短，所以答案为“＜”<br>（3）这里有3个取绝对值的符号，然后呢，第一个的取绝对值结果就是（c+b）（c为负数，b为正数，减一下结果是-（c+b），绝对值结果为（c+b）），第二个结果是（c+a-1），第三个结果是（a-1），然后连起来c+b-c-a+1+a-1消元，答案是b。<br>（4）<br>① 这个绝对值中如何得到最小的数？这是这道题的关键。用贪心思想，因为负数在绝对值中根本不起作用————会变成正数，所以，情况只有一种，其中一个绝对值的结果是0，先设x&#x3D;a，第一个绝对值的结果是0，第二个是a-b，再用上绝对值，答案就是b-a，设x&#x3D;b也可以得到同样的结果。</p>
<p>② 和上题同理，前两个的结果我们已经有了，b-a，在加上一个x+1<br>因为设x&#x3D;a，（b也行，就是比较麻烦），结果为b-a+a+1，消元，答案是b+1。</p>
<p>③ 和①同理，前两个结果是b-a，后面a肯定比c大，（就是说第三个绝对值是正数），结果是b-a+a-c，消元，答案是b-c。</p>
<p>二、<br>这里我们分4种情况<br>1.a&gt;0,b&gt;0,c&lt;0 等于1+1-1&#x3D;1<br>2.a&gt;0,b&lt;0,c&gt;0 等于1-1+1&#x3D;1<br>3.a&lt;0,b&gt;0,c&gt;0 等于-1+1+1&#x3D;1<br>4.a&lt;0,b&lt;0,c&lt;0 等于-1-1-1&#x3D;-3<br>所以，答案为1或-3。</p>
]]></content>
      <tags>
        <tag>题目分享</tag>
        <tag>数学</tag>
        <tag>绝对值</tag>
      </tags>
  </entry>
</search>
